{
  "openapi": "3.0.1",
  "info": {
    "title": "Aeroclub Expense",
    "description": "Aeroclub Expense simplifies travel, expense and invoice management for total visibility and greater control.",
    "termsOfService": "None",
    "contact": {
      "name": "Team Sigma",
      "url": "http://aeroclub.ru",
      "email": "TeamSigma@aeroclub.ru"
    },
    "license": {
      "name": "Use under Aeroclub IT License",
      "url": "http://aeroclub.ru/expense/license"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/ui/Activations/company/{companyId}/{logical}/{id}/check": {
      "put": {
        "tags": [
          "Activations"
        ],
        "summary": "Метод обновления IsActive у объекта (получаем признак активирован ли в сервисе ДДных) по Aeroclub.Expense.Domain.Models.Common.EntityReference",
        "operationId": "_By_companyId_logical_id",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "a unique id of the Activation",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор компании",
              "format": "int32"
            }
          },
          {
            "name": "logical",
            "in": "path",
            "description": "a Activation representation",
            "required": true,
            "schema": {
              "type": "string",
              "description": "EntityLogicalName",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор Entity",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Entity",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportAdditionalDocuments/{id}": {
      "get": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Получение деталей по доп. документу к АО",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id доп. документа",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id доп. документа",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Обновление данных доп. документа к АО",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the AdvanceReportAdditionalDocument",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Данные для обновления доп. документа",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportAdditionalDocuments": {
      "post": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Создание доп. документа к АО",
        "requestBody": {
          "description": "Данные для создания доп. документа к АО",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Удаление доп. документа к АО",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "a unique id of the AdvanceReportAdditionalDocument",
            "schema": {
              "type": "integer",
              "description": "Id доп. документа",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportAdditionalDocuments/{id}/attach/{expenseId}": {
      "put": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Привязка расхода к доп. документу к АО",
        "operationId": "_By_id_expenseId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the AdvanceReportAdditionalDocument",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id доп. документа",
              "format": "int32"
            }
          },
          {
            "name": "expenseId",
            "in": "path",
            "description": "a AdvanceReportAdditionalDocument representation",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id расхода",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportAdditionalDocuments/{id}/detach/{expenseId}": {
      "put": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Отвязка расхода от доп. документа",
        "operationId": "_By_id_expenseId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the AdvanceReportAdditionalDocument",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id доп. документа",
              "format": "int32"
            }
          },
          {
            "name": "expenseId",
            "in": "path",
            "description": "a AdvanceReportAdditionalDocument representation",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id расхода",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportAdditionalDocuments/{id}/reports/{type}/{extension}": {
      "get": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Reports",
        "operationId": "_By_id_type_utcOffset_extension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Aeroclub.Expense.Domain.Models.AdvanceReports.AdvanceReportAdditionalDocument id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.AdvanceReports.AdvanceReportAdditionalDocument id",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Aeroclub.Expense.Reports.Enums.PrintFormTypereport type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Aeroclub.Expense.Reports.Enums.PrintFormTypereport type",
              "nullable": true
            }
          },
          {
            "name": "utcOffset",
            "in": "query",
            "description": "Сдвиг времени",
            "schema": {
              "type": "integer",
              "description": "Сдвиг времени",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "extension",
            "in": "path",
            "description": "Тип документа",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportAdditionalDocuments/reports/{type}/{extension}/{advanceReportApplicationId}": {
      "get": {
        "tags": [
          "AdvanceReportAdditionalDocuments"
        ],
        "summary": "Печать всех доп. документов, входящих в АО",
        "operationId": "_By_type_utcOffset_extension_advanceReportApplicationId",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Aeroclub.Expense.Reports.Enums.PrintFormTypereport type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Aeroclub.Expense.Reports.Enums.PrintFormTypereport type",
              "nullable": true
            }
          },
          {
            "name": "utcOffset",
            "in": "query",
            "description": "Сдвиг времени",
            "schema": {
              "type": "integer",
              "description": "Сдвиг времени",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "extension",
            "in": "path",
            "description": "Тип документа",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportExtension"
            }
          },
          {
            "name": "advanceReportApplicationId",
            "in": "path",
            "description": "Aeroclub.Expense.Domain.Models.AdvanceReportApplication id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.AdvanceReportApplication id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Returns paged list of AdvanceReportApplications",
        "operationId": "_By_ExpenseApplicationId_ExpenseApplicationNumber_LegalEntityId_OrgUnitId_LocationId_Status_StartOn_EndOn_CityId_CompanyId_Journey_Id_Number_EmployeeId_OccupationId_Personal_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ExpenseApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ExpenseApplicationNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "LegalEntityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrgUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdvanceReportApplicationStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "StartOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CityId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Journey",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Personal",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AdvanceReportApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Creates a AdvanceReportApplication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AdvanceReportApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}/short": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Retrieves a AdvanceReportApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}/cancel": {
      "put": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Cancel Aeroclub.Expense.Domain.Models.AdvanceReportApplication by id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the AdvanceReportApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.AdvanceReportApplication Id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{expenseApplicationId}": {
      "post": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Add Aeroclub.Expense.Domain.Models.AdvanceReportApplication",
        "operationId": "_By_expenseApplicationId",
        "parameters": [
          {
            "name": "expenseApplicationId",
            "in": "path",
            "description": "a AdvanceReportApplication representation",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "expenseApplicationId",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AdvanceReportApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}/reports/{type}/{extension}": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Reports",
        "operationId": "_By_id_type_utcOffset_extension_withAdditionalDocuments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Aeroclub.Expense.Domain.Models.AdvanceReportApplication id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.AdvanceReportApplication id",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Aeroclub.Expense.Reports.Enums.PrintFormTypereport type",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Aeroclub.Expense.Reports.Enums.PrintFormTypereport type",
              "nullable": true
            }
          },
          {
            "name": "utcOffset",
            "in": "query",
            "description": "Сдвиг времени",
            "schema": {
              "type": "integer",
              "description": "Сдвиг времени",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "extension",
            "in": "path",
            "description": "Тип документа",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportExtension"
            }
          },
          {
            "name": "withAdditionalDocuments",
            "in": "query",
            "description": "возвращать результат с допдокументами",
            "schema": {
              "type": "boolean",
              "description": "возвращать результат с допдокументами",
              "default": false
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/reports/registry": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "\"AdvanceReports registry\" Report",
        "operationId": "_By_dateFrom_dateTo_companyId",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Дата начала",
            "schema": {
              "type": "string",
              "description": "Дата начала",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Дата окончания",
            "schema": {
              "type": "string",
              "description": "Дата окончания",
              "format": "date-time"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Идентификатор компании",
            "schema": {
              "type": "integer",
              "description": "Идентификатор компании",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AdvanceReportApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/reports/types": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Доступные печатные формы",
        "operationId": "_By_companyId_advanceReportApplicationId",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "advanceReportApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AdvanceReportApplicationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}/history": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Метод получения пагинированного списка событий по объекту Aeroclub.Expense.Domain.Models.AdvanceReportApplication",
        "operationId": "_By_id_page_pageSize_countOnly",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "идентификатор объекта",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "идентификатор объекта",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "номер страницы",
            "schema": {
              "type": "integer",
              "description": "номер страницы",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "количество записей на странице",
            "schema": {
              "type": "integer",
              "description": "количество записей на странице",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "countOnly",
            "in": "query",
            "description": "признак отображения общего количества заявок, удовлетворяющих параметрам фильтра, без детализации",
            "schema": {
              "type": "boolean",
              "description": "признак отображения общего количества заявок, удовлетворяющих параметрам фильтра, без детализации",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}/customproperties": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Метод получения списка дд по объекту Aeroclub.Expense.Domain.Models.AdvanceReportApplication",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "идентификатор объекта",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "идентификатор объекта",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}/reinit_linemanager": {
      "post": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Creates a AdvanceReportApplication",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a AdvanceReportApplication representation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AdvanceReportApplicationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/reinit_linemanager_for_assignee": {
      "post": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Creates a AdvanceReportApplication",
        "operationId": "_By_assigneeEmployeeId",
        "parameters": [
          {
            "name": "assigneeEmployeeId",
            "in": "query",
            "description": "a AdvanceReportApplication representation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AdvanceReportApplicationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/AdvanceReportApplications/{id}": {
      "get": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Retrieves a AdvanceReportApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AdvanceReportApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Updates a AdvanceReportApplication by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the AdvanceReportApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AdvanceReportApplications"
        ],
        "summary": "Deletes a AdvanceReportApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the AdvanceReportApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ApplicationTypes": {
      "get": {
        "tags": [
          "ApplicationTypes"
        ],
        "summary": "Returns paged list of ApplicationTypes",
        "operationId": "_By_CompanyId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ApplicationTypeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApplicationTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ApplicationTypes"
        ],
        "summary": "Creates a ApplicationType",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ApplicationTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ApplicationTypes/{id}": {
      "get": {
        "tags": [
          "ApplicationTypes"
        ],
        "summary": "Retrieves a ApplicationType by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ApplicationTypeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ApplicationTypes"
        ],
        "summary": "Updates a ApplicationType by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the ApplicationType",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationTypeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ApplicationTypes"
        ],
        "summary": "Deletes a ApplicationType by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the ApplicationType",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/{id}": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "Получение деталей по листу согласования",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id листа согласования",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id листа согласования",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Approvals"
        ],
        "summary": "Изменение статуса листа согласования",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Approval",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id листа согласования",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Запрос с параметром статуса листа согласования",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetActionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetActionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetActionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetActionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "Получение списка позиций листа согласования",
        "operationId": "_By_Type_CityId_Id_Journey_StartOn_EndOn_CompanyId_EmployeeId_OccupationId_Number_WhoIsInPaperWork_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CityId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Journey",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WhoIsInPaperWork",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaperWorkEnum"
              },
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApprovalItemResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApprovalItemResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApprovalItemResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Approvals"
        ],
        "summary": "Создание листа согласования",
        "requestBody": {
          "description": "Запрос на создание листа согласования с массивом объектов на согласование",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalSheetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/done": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "Получение списка позиций листа согласования, по которым была проставлена резолюция",
        "operationId": "_By_Type_CityId_Id_Journey_StartOn_EndOn_CompanyId_EmployeeId_OccupationId_Number_WhoIsInPaperWork_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CityId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Journey",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WhoIsInPaperWork",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaperWorkEnum"
              },
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApprovalItemResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApprovalItemResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ApprovalItemResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/debug/assertion": {
      "post": {
        "tags": [
          "Approvals"
        ],
        "summary": "Creates a Approval",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AssertionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssertionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssertionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssertionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/debug/approval/{logicalName}/{id}/build": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "Метод проверки созданя ApprovalSheet",
        "operationId": "_By_id_logicalName",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "logicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/{logicalName}/{id}": {
      "post": {
        "tags": [
          "Approvals"
        ],
        "summary": "Creates a Approval",
        "operationId": "_By_logicalName_id",
        "parameters": [
          {
            "name": "logicalName",
            "in": "path",
            "description": "a Approval representation",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/{id}/items/{itemId}": {
      "put": {
        "tags": [
          "Approvals"
        ],
        "summary": "Проставление резолюции согласующим сотрудником",
        "operationId": "_By_id_itemId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Approval",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id листа согласования",
              "format": "int32"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "a Approval representation",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id позиции листа согласования",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Запрос с параметром результата согласования",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemResolutionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemResolutionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemResolutionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemResolutionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/{id}/renew": {
      "put": {
        "tags": [
          "Approvals"
        ],
        "summary": "Метод переводит согласуемый объект в статус \"На согласовании\"",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Approval",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id листа согласования Aeroclub.Expense.Domain.Models.Approval.ApprovalSheet",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Запрос на возврат согласования",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemRenewRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemRenewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemRenewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalItemRenewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/byObject": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "Returns paged list of Approvals",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalItemPermissionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalItemPermissionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalItemPermissionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/details": {
      "get": {
        "tags": [
          "Approvals"
        ],
        "summary": "Метод позволяет вернуть всю информацию о согласовании конкретного объекта Expense",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalDataResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalDataResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/read": {
      "put": {
        "tags": [
          "Approvals"
        ],
        "summary": "Устанавливает признак прочитанности Aeroclub.Expense.Domain.Models.Approval.ApprovalSheetItem.ReadAt объекта согласования для текущего пользователя",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "a request of the Approval",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Approvals/unread": {
      "put": {
        "tags": [
          "Approvals"
        ],
        "summary": "Сбрасывает признак прочитанности Aeroclub.Expense.Domain.Models.Approval.ApprovalSheetItem.ReadAt объекта согласования для текущего пользователя",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "a request of the Approval",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Assistances": {
      "get": {
        "tags": [
          "Assistances"
        ],
        "summary": "Метод получения списка ассистентов Aeroclub.Expense.Domain.Models.Assistance.Assistance",
        "operationId": "_By_AssistantOccupationId_AssistantEmployeeId_EmployeeId_EmployeeOccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "AssistantOccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "AssistantEmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "EmployeeOccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AssistanceGroupedEmployeeResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AssistanceGroupedEmployeeResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AssistanceGroupedEmployeeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Assistances"
        ],
        "summary": "Creates a Assistance",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssistanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssistanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Assistances/{id}": {
      "get": {
        "tags": [
          "Assistances"
        ],
        "summary": "Retrieves a Assistance by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AssistanceDetailResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AssistanceDetailResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AssistanceDetailResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Assistances"
        ],
        "summary": "Метод удаления одной ассистенции Aeroclub.Expense.Domain.Models.Assistance.Assistance по идентификатору",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Assistance",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор ассистенции Aeroclub.Expense.Domain.Models.Assistance.Assistance",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Assistances/occupation/{occupationId}": {
      "delete": {
        "tags": [
          "Assistances"
        ],
        "summary": "Метод удаления всех ассистенций Aeroclub.Expense.Domain.Models.Assistance.Assistance для одного ассистента",
        "operationId": "_By_occupationId",
        "parameters": [
          {
            "name": "occupationId",
            "in": "path",
            "description": "a request of the Assistance",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор ассистента Aeroclub.Expense.Domain.Models.Assistance.Assistance.AssistantOccupationId",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Assistances/check": {
      "get": {
        "tags": [
          "Assistances"
        ],
        "summary": "Метод проверяет, является ли пользователь с замещением Aeroclub.Expense.Domain.Models.Main.Occupation ассистентом, для предоставления прав на просмотр и управление АО Aeroclub.Expense.Domain.Models.AdvanceReportApplication и ЗНР Aeroclub.Expense.Domain.Models.ExpenseApplication",
        "operationId": "_By_occupationId_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "occupationId",
            "in": "query",
            "description": "Идентификатор occupation пользователя, которого необходимо проверить",
            "schema": {
              "type": "integer",
              "description": "Идентификатор occupation пользователя, которого необходимо проверить",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Assistances": {
      "post": {
        "tags": [
          "Assistances"
        ],
        "summary": "Creates a Assistance",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Assistances"
        ],
        "summary": "Deletes a Assistance by request",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.AssistanceIntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Assistances/{assistantKey}/{companyKey}": {
      "delete": {
        "tags": [
          "Assistances"
        ],
        "summary": "Deletes a Assistance by request",
        "operationId": "_By_assistantKey_companyKey",
        "parameters": [
          {
            "name": "assistantKey",
            "in": "path",
            "description": "a request of the Assistance",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "companyKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Creates a Attachment",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ObjectId.Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ObjectId.LogicalName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ObjectId.Name.Ru": {
                    "type": "string",
                    "nullable": true
                  },
                  "ObjectId.Name.En": {
                    "type": "string",
                    "nullable": true
                  },
                  "ObjectId.ReferenceId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Content": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ObjectId.Id": {
                  "style": "form"
                },
                "ObjectId.LogicalName": {
                  "style": "form"
                },
                "ObjectId.Name.Ru": {
                  "style": "form"
                },
                "ObjectId.Name.En": {
                  "style": "form"
                },
                "ObjectId.ReferenceId": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[AttachmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Returns paged list of Attachments",
        "operationId": "_By_ObjectId.Id_ObjectId.LogicalName_ObjectId.Name.Ru_ObjectId.Name.En_ObjectId.ReferenceId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ObjectId.Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectId.LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectId.Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectId.Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectId.ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AttachmentResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AttachmentResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Attachments/{id}": {
      "put": {
        "tags": [
          "Attachments"
        ],
        "summary": "Updates a Attachment by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Attachment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ObjectId.Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ObjectId.LogicalName": {
                    "type": "string",
                    "nullable": true
                  },
                  "ObjectId.Name.Ru": {
                    "type": "string",
                    "nullable": true
                  },
                  "ObjectId.Name.En": {
                    "type": "string",
                    "nullable": true
                  },
                  "ObjectId.ReferenceId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Content": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ObjectId.Id": {
                  "style": "form"
                },
                "ObjectId.LogicalName": {
                  "style": "form"
                },
                "ObjectId.Name.Ru": {
                  "style": "form"
                },
                "ObjectId.Name.En": {
                  "style": "form"
                },
                "ObjectId.ReferenceId": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Retrieves a Attachment by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for AttachmentResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "summary": "Deletes a Attachment by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Attachment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Attachments/{id}/content": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Retrieves a Attachment by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "200": {
            "description": "Paged response for AttachmentResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Attachments/{id}/preview": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Retrieves a Attachment by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "200": {
            "description": "Paged response for AttachmentResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Batches/{id}": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "Метод возврата списка проводок, созданных в рамках загрузки одного пакета проводок",
        "operationId": "_By_id_PostKey_LedgerAccount_Employee_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch id",
              "format": "int32"
            }
          },
          {
            "name": "PostKey",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransactionPostingKey"
            }
          },
          {
            "name": "LedgerAccount",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Employee",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByBatchDetailsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByBatchDetailsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByBatchDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Batches"
        ],
        "summary": "Помечание загруженных из внешних систем пакеты проводок и созданные на основе загрузки проводки как удаленные",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Batche",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Batches": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "Получение списка пакетов загрузок проводок",
        "operationId": "_By_StartDate_EndDate_AuthorId_BatchId_LastLoadStartDate_LastLoadEndDate_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "AuthorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "BatchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LastLoadStartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadEndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionBatchResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionBatchResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionBatchResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Batches"
        ],
        "summary": "Creates a Batche",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Actor.Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Actor.FullName.Ru": {
                    "type": "string",
                    "nullable": true
                  },
                  "Actor.FullName.En": {
                    "type": "string",
                    "nullable": true
                  },
                  "Actor.Login": {
                    "type": "string",
                    "nullable": true
                  },
                  "Content": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "OccupationId": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Actor.Id": {
                  "style": "form"
                },
                "Actor.FullName.Ru": {
                  "style": "form"
                },
                "Actor.FullName.En": {
                  "style": "form"
                },
                "Actor.Login": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                },
                "OccupationId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Batches/internal": {
      "get": {
        "tags": [
          "Batches"
        ],
        "summary": "Получение списка пакетов загрузок проводок для Expense",
        "operationId": "_By_ObjectType_ObjectIds_BatchId_EmployeeId_OccupationId_LoadDateStart_LoadDateEnd_LastLoadDateStart_LastLoadDateEnd_CreateDate_BatchState_JourneyNum_JourneyStartDate_JourneyEndDate_CitiesIds_CityId_IsArchive_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ObjectType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ExpenseObjectType"
            }
          },
          {
            "name": "ObjectIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "BatchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LoadDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreateDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "BatchState",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransactionBatchState"
            }
          },
          {
            "name": "JourneyNum",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "JourneyStartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "JourneyEndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CitiesIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "CityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsArchive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionBatchForExpenseResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionBatchForExpenseResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionBatchForExpenseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Batches/archive": {
      "put": {
        "tags": [
          "Batches"
        ],
        "summary": "Метод который будет менять у пакета проводок Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch признак Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch.IsArchive",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "a request of the Batche",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Новое значение признака IsArchive",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Batches/{id}/archive": {
      "put": {
        "tags": [
          "Batches"
        ],
        "summary": "Метод который будет менять у пакета проводок Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch признак Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch.IsArchive",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Batche",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id Aeroclub.Expense.Domain.Models.Transactions.TransactionBatch пакета проводок",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Новое значение признака IsArchive",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean",
                "description": "Новое значение признака IsArchive"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Batches/archive/bulk": {
      "put": {
        "tags": [
          "Batches"
        ],
        "summary": "Updates a Batche by request",
        "operationId": "_By_LoadDateStart_LoadDateEnd_LastLoadDateStart_LastLoadDateEnd_BatchState_IsExternal_ObjectIds_EmployeeId_OccupationId_CreateDate_JourneyNum_JourneyStartDate_JourneyEndDate_CitiesIds_IsArchive",
        "parameters": [
          {
            "name": "LoadDateStart",
            "in": "query",
            "description": "a request of the Batche",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LoadDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "BatchState",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransactionBatchState"
            }
          },
          {
            "name": "IsExternal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ObjectIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CreateDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "JourneyNum",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "JourneyStartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "JourneyEndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CitiesIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "IsArchive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BudgetCodes": {
      "get": {
        "tags": [
          "BudgetCodes"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.BudgetGroup",
        "operationId": "_By_CompanyId_OccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BudgetCodeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[BudgetCodeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BudgetCodes"
        ],
        "summary": "Creates a BudgetCode",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[BudgetCodeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BudgetCodes/{id}": {
      "get": {
        "tags": [
          "BudgetCodes"
        ],
        "summary": "Retrieves a BudgetCode by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BudgetCodeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BudgetCodes"
        ],
        "summary": "Updates a BudgetCode by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the BudgetCode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCodeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BudgetCodes"
        ],
        "summary": "Deletes a BudgetCode by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the BudgetCode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BudgetGroups": {
      "get": {
        "tags": [
          "BudgetGroups"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.BudgetGroup",
        "operationId": "_By_CompanyId_OccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BudgetGroupResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[BudgetGroupResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BudgetGroups"
        ],
        "summary": "Creates a BudgetGroup",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[BudgetGroupResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BudgetGroups/{id}": {
      "get": {
        "tags": [
          "BudgetGroups"
        ],
        "summary": "Retrieves a BudgetGroup by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BudgetGroupResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BudgetGroups"
        ],
        "summary": "Updates a BudgetGroup by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the BudgetGroup",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetGroupRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BudgetGroups"
        ],
        "summary": "Deletes a BudgetGroup by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the BudgetGroup",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Budgets": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.Budget",
        "operationId": "_By_CompanyId_ValidFrom_ValidTo_OccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ValidFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ValidTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BudgetResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[BudgetResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Creates a Budget",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[BudgetResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Budgets/{id}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Retrieves a Budget by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BudgetResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Budgets"
        ],
        "summary": "Updates a Budget by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Budget",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Budgets"
        ],
        "summary": "Deletes a Budget by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Budget",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BusinessTargets/company/{companyId}": {
      "get": {
        "tags": [
          "BusinessTargets"
        ],
        "summary": "Метод получения всех Aeroclub.Expense.Domain.Models.BusinessTarget по компании",
        "operationId": "_By_companyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Идентификатор Aeroclub.Expense.Domain.Models.Company",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.Domain.Models.Company",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BusinessTargetResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[BusinessTargetResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BusinessTargets": {
      "get": {
        "tags": [
          "BusinessTargets"
        ],
        "summary": "Returns paged list of BusinessTargets",
        "operationId": "_By_ApplicationTypeId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ApplicationTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BusinessTargetResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[BusinessTargetResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "BusinessTargets"
        ],
        "summary": "Creates a BusinessTarget",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[BusinessTargetResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/BusinessTargets/{id}": {
      "get": {
        "tags": [
          "BusinessTargets"
        ],
        "summary": "Retrieves a BusinessTarget by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for BusinessTargetResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessTargetResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "BusinessTargets"
        ],
        "summary": "Updates a BusinessTarget by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the BusinessTarget",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessTargetRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "BusinessTargets"
        ],
        "summary": "Deletes a BusinessTarget by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the BusinessTarget",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Catalog/{catalog}": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "summary": "Creates a Catalog",
        "operationId": "_By_catalog",
        "parameters": [
          {
            "name": "catalog",
            "in": "path",
            "description": "a Catalog representation",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Catalog"
        ],
        "summary": "Updates a Catalog by request",
        "operationId": "_By_catalog",
        "parameters": [
          {
            "name": "catalog",
            "in": "path",
            "description": "a request of the Catalog",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Catalog/{catalog}/{alternateKey}": {
      "delete": {
        "tags": [
          "Catalog"
        ],
        "summary": "Deletes a Catalog by request",
        "operationId": "_By_alternateKey_companyKey_deletedAt_catalog",
        "parameters": [
          {
            "name": "alternateKey",
            "in": "path",
            "description": "a request of the Catalog",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "companyKey",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "deletedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "catalog",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Cities": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Returns paged list of Cities",
        "operationId": "_By_Name_Language_SearchCode_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Language",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchCode",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CityBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CityBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Cities"
        ],
        "summary": "Creates a City",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[CityBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Cities/details": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Пагиннированный список справочника Aeroclub.Expense.Domain.Models.City с детальной информацией",
        "operationId": "_By_Name_Language_SearchCode_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Language",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchCode",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CityBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CityBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Cities/bycities": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Метод получения список Aeroclub.Expense.Domain.Models.City по массиву идентификаторов городов",
        "operationId": "_By_ids",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Массив идентификаторов Aeroclub.Expense.Domain.Models.City",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "description": "Массив идентификаторов Aeroclub.Expense.Domain.Models.City",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CityBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CityBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Cities/{id}": {
      "get": {
        "tags": [
          "Cities"
        ],
        "summary": "Retrieves a City by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CityBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityBaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Cities"
        ],
        "summary": "Updates a City by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the City",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Cities"
        ],
        "summary": "Deletes a City by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the City",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Cities": {
      "post": {
        "tags": [
          "Cities"
        ],
        "summary": "Creates a City",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Cities/{id}": {
      "put": {
        "tags": [
          "Cities"
        ],
        "summary": "Updates a City by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the City",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Clearing/canRead": {
      "get": {
        "tags": [
          "Clearing"
        ],
        "summary": "Returns paged list of Clearings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Clearing": {
      "get": {
        "tags": [
          "Clearing"
        ],
        "summary": "Returns paged list of Clearings",
        "operationId": "_By_StartDate_EndDate_EmployeeId_OccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedClearingResponse[ClearingResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedClearingResponse[ClearingResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedClearingResponse[ClearingResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Clearing"
        ],
        "summary": "Метод помечает записи Clearing (Взаиморасчеты с сотрудником) как удаленные",
        "requestBody": {
          "description": "Массив BatchID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Массив BatchID",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Массив BatchID",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Массив BatchID",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Массив BatchID",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Communications/{objectType}": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Returns paged list of Communications",
        "operationId": "_By_objectType_ObjectId_ObjectType_Sort_MessageType_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "objectType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderingDirection"
            }
          },
          {
            "name": "MessageType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CommunicationMessageType"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CommunicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CommunicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Communications": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Returns paged list of Communications",
        "operationId": "_By_ObjectId_ObjectType_Sort_MessageType_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/OrderingDirection"
            }
          },
          {
            "name": "MessageType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CommunicationMessageType"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CommunicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CommunicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Communications"
        ],
        "summary": "Creates a Communication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[CommunicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Communications/{id}": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Retrieves a Communication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CommunicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Communications"
        ],
        "summary": "Updates a Communication by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Communication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Communications"
        ],
        "summary": "Deletes a Communication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Communication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Communications": {
      "post": {
        "tags": [
          "Communications"
        ],
        "summary": "Creates a Communication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CommunicationIntegrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CommunicationIntegrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CommunicationIntegrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CommunicationIntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Companies/lookup": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.Company",
        "operationId": "_By_Name_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CompanyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CompanyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Returns paged list of Companies",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CompanyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CompanyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Creates a Company",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[CompanyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Retrieves a Company by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CompanyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Updates a Company by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Deletes a Company by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Config/{configCode}/value": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Returns paged list of Configs",
        "operationId": "_By_configCode",
        "parameters": [
          {
            "name": "configCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyConfig"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyConfig"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyConfig"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Config/list": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "Creates a Config",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValuesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValuesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValuesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValuesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyConfigs"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyConfigs"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyConfigs"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Returns paged list of Contacts",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ContactResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ContactResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Creates a Contact",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ContactResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieves a Contact by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ContactResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Updates a Contact by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Deletes a Contact by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Returns paged list of Countries",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CountryResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CountryResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Countries"
        ],
        "summary": "Creates a Country",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[CountryResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Countries/{id}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Retrieves a Country by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CountryResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Countries"
        ],
        "summary": "Updates a Country by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Country",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CountryRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Countries"
        ],
        "summary": "Deletes a Country by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Country",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Countries": {
      "post": {
        "tags": [
          "Countries"
        ],
        "summary": "Creates a Country",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Countries/{id}": {
      "put": {
        "tags": [
          "Countries"
        ],
        "summary": "Updates a Country by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Country",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CountryRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Countries/{countryId}/cities": {
      "post": {
        "tags": [
          "Countries"
        ],
        "summary": "Creates a Country",
        "operationId": "_By_countryId",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "a Country representation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Countries/{alternativeKey}/cities": {
      "post": {
        "tags": [
          "Countries"
        ],
        "summary": "Creates a Country",
        "operationId": "_By_alternativeKey",
        "parameters": [
          {
            "name": "alternativeKey",
            "in": "path",
            "description": "a Country representation",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Countries/{countryId}/cities/{id}": {
      "put": {
        "tags": [
          "Countries"
        ],
        "summary": "Updates a Country by unique id",
        "operationId": "_By_countryId_id",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "a unique id of the Country",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "a Country representation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/Countries/{alternativeKey}/cities/{id}": {
      "put": {
        "tags": [
          "Countries"
        ],
        "summary": "Updates a Country by unique id",
        "operationId": "_By_alternativeKey_id",
        "parameters": [
          {
            "name": "alternativeKey",
            "in": "path",
            "description": "a unique id of the Country",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "a Country representation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Currencies/{currencyid}/Conversion": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Получение деталей по листу согласования",
        "operationId": "_By_currencyid_amount_dateRate",
        "parameters": [
          {
            "name": "currencyid",
            "in": "path",
            "description": "Id листа согласования",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id листа согласования",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Cумма в валюте",
            "schema": {
              "type": "number",
              "description": "Cумма в валюте",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "dateRate",
            "in": "query",
            "description": "Дата курса",
            "schema": {
              "type": "string",
              "description": "Дата курса",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CurrencyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CurrencyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Returns paged list of Currencies",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CurrencyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CurrencyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Currencies"
        ],
        "summary": "Creates a Currency",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[CurrencyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Currencies/{id}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Retrieves a Currency by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CurrencyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Currencies"
        ],
        "summary": "Updates a Currency by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Currency",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Currencies"
        ],
        "summary": "Deletes a Currency by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Currency",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/CurrencyRate/bulk": {
      "post": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Creates a CurrencyRate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/CurrencyRate": {
      "post": {
        "tags": [
          "CurrencyRate"
        ],
        "summary": "Creates a CurrencyRate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.CurrencyRateIntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRate"
                }
              }
            }
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CurrencyRates": {
      "get": {
        "tags": [
          "CurrencyRates"
        ],
        "summary": "Returns paged list of CurrencyRates",
        "operationId": "_By_CurrencyRateID_CurrencyToID_CurrencyFromID_Date_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CurrencyRateID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CurrencyToID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CurrencyFromID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CurrencyRateResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[CurrencyRateResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "CurrencyRates"
        ],
        "summary": "Creates a CurrencyRate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[CurrencyRateResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CurrencyRates/{id}": {
      "get": {
        "tags": [
          "CurrencyRates"
        ],
        "summary": "Retrieves a CurrencyRate by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for CurrencyRateResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CurrencyRates"
        ],
        "summary": "Updates a CurrencyRate by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the CurrencyRate",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyRateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "CurrencyRates"
        ],
        "summary": "Deletes a CurrencyRate by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the CurrencyRate",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/CustomProperties": {
      "post": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Creates a CustomProperty",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPropertyResource"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPropertyResource"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPropertyResource"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomPropertyResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomProperties/{id}": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty по идентификатору",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Method Not Allowed"
          },
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ui/CustomProperties": {
      "post": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод создания",
        "requestBody": {
          "description": "Команда на создание с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод редактирования",
        "requestBody": {
          "description": "Команда на редактирование с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty по компании и объекту",
        "operationId": "_By_CompanyId_ObjectLogicalNameId_CompanyAlternateKey_IgnoreVisibility_OccupationId_EmployeeId",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ObjectLogicalNameId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CompanyAlternateKey",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IgnoreVisibility",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод удаления Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty (помечает IsDeleted = true)",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "a unique id of the CustomProperty",
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ui/CustomProperties/listvalues": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue по доп данному",
        "operationId": "_By_CustomPropertyId",
        "parameters": [
          {
            "name": "CustomPropertyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomProperties/values": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyValueAggregate.CustomPropertyValue по доп данным и объекту",
        "operationId": "_By_CustomPropertyIds_ObjectLogicalNameId_ExternalObjectId",
        "parameters": [
          {
            "name": "CustomPropertyIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "ObjectLogicalNameId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExternalObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomProperties/junctions": {
      "put": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод редактирования Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty (связи компании, объекты, код, тип значения)",
        "requestBody": {
          "description": "Команда на редактирование с необходимым набором свойств Aeroclub.Expense.CustomPropertyService.Commands.UpdateCustomPropertyJunctionsCommand",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyJunctionsCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyJunctionsCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyJunctionsCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyJunctionsCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ui/CustomProperties/companies": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения списка Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.Company из сервиса ДД",
        "operationId": "_By_AlternateKey",
        "parameters": [
          {
            "name": "AlternateKey",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomProperties/logicalnames": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения списка Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.ObjectLogicalName из сервиса ДД",
        "operationId": "_By_NameEn",
        "parameters": [
          {
            "name": "NameEn",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomProperties/attributes": {
      "post": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод добавления Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomPropertyAttribute к Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty",
        "requestBody": {
          "description": "Команда Aeroclub.Expense.CustomPropertyService.Commands.CreateCustomPropertyAttributesCommand",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyAttributesCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyAttributesCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyAttributesCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyAttributesCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomProperties/regularexpressions": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод получения списка Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.RegularExpression из сервиса ДД",
        "operationId": "_By_AlternateKey_IsDefault",
        "parameters": [
          {
            "name": "AlternateKey",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomProperties/activation/check": {
      "get": {
        "tags": [
          "CustomProperties"
        ],
        "summary": "Метод проверки активации сущности по названию сущности и идентификатору",
        "operationId": "_By_ObjectLogicalName_ObjectId_ExpenseCompanyId_IgnoredCustomPropertiesValues",
        "parameters": [
          {
            "name": "ObjectLogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExpenseCompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IgnoredCustomPropertiesValues",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/CustomPropertyListValues/valueonvalue": {
      "post": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод создания Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyValueOnValueDependency",
        "requestBody": {
          "description": "Команда на создание зависимости между 2мя Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValueOnValueDependencyCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValueOnValueDependencyCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValueOnValueDependencyCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValueOnValueDependencyCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/propertyonvalue": {
      "post": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод создания Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyPropertyOnValueDependency",
        "requestBody": {
          "description": "Команда на создание зависимости между Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty и Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyOnValueDependencyCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyOnValueDependencyCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyOnValueDependencyCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyOnValueDependencyCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/dependencies": {
      "get": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод получения зависимостей для Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
        "operationId": "_By_CustomPropertyListValueIds",
        "parameters": [
          {
            "name": "CustomPropertyListValueIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/valueonvalue/{undependId}/{dependId}": {
      "delete": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод удаления Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyValueOnValueDependency (помечает IsDeleted = true)",
        "operationId": "_By_undependId_dependId",
        "parameters": [
          {
            "name": "undependId",
            "in": "path",
            "description": "a request of the CustomPropertyListValue",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор независимого Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
              "format": "int32"
            }
          },
          {
            "name": "dependId",
            "in": "path",
            "description": "Идентификатор зависимого Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор зависимого Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/propertyonvalue/{propertyId}/{listvalueId}": {
      "delete": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод удаления Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyValueOnValueDependency (помечает IsDeleted = true)",
        "operationId": "_By_propertyId_listvalueId",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "description": "a request of the CustomPropertyListValue",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyAggregate.CustomProperty",
              "format": "int32"
            }
          },
          {
            "name": "listvalueId",
            "in": "path",
            "description": "Идентификатор Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues": {
      "delete": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод удаления Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue (помечает IsDeleted = true)",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "a unique id of the CustomPropertyListValue",
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод создания",
        "requestBody": {
          "description": "Команда на создание с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyListValueCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyListValueCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyListValueCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyListValueCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод редактирования",
        "requestBody": {
          "description": "Команда на редактирование с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyListValueCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyListValueCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyListValueCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyListValueCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/search": {
      "get": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод получения списка Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue из сервиса ДД (поиск по NameEn или NameRu,S паттерн поиск StrartWith)",
        "operationId": "_By_CustomPropertyId_Value",
        "parameters": [
          {
            "name": "CustomPropertyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Value",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/byids": {
      "get": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Метод получения Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyListValueAggregate.CustomPropertyListValue по списку идентификаторов",
        "operationId": "_By_Ids",
        "parameters": [
          {
            "name": "Ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyListValues/{id}": {
      "get": {
        "tags": [
          "CustomPropertyListValues"
        ],
        "summary": "Retrieves a CustomPropertyListValue by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyValues/company/{companyId}/{logicalName}/{id}/validate": {
      "get": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Retrieves a CustomPropertyValue by unique id",
        "operationId": "_By_logicalName_id_companyId",
        "parameters": [
          {
            "name": "logicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyValues/byobject": {
      "post": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Метод создания всех значений ДД по объекту",
        "requestBody": {
          "description": "Команда на создание с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyValuesByObjectCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyValuesByObjectCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyValuesByObjectCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomPropertyValuesByObjectCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyValues": {
      "delete": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Метод удаления Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyValueAggregate.CustomPropertyValue (помечает IsDeleted = true)",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "a unique id of the CustomPropertyValue",
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyValueAggregate.CustomPropertyValue",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Метод редактирования",
        "requestBody": {
          "description": "Команда на редактирование с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyValuesCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyValuesCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyValuesCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomPropertyValuesCommand"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyValues/codes": {
      "get": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Метод получения Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyValueAggregate.CustomPropertyValue по ObjectLogicalNameId, ExternalObjectId, массив CustomPropertyCode",
        "operationId": "_By_ObjectLogicalNameId_ExternalObjectId_CustomPropertyCodes",
        "parameters": [
          {
            "name": "ObjectLogicalNameId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExternalObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CustomPropertyCodes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyValues/object": {
      "delete": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Метод удаления всех Aeroclub.Expense.CustomPropertyService.Domain.AggregatesModel.CustomPropertyValueAggregate.CustomPropertyValue для объекта (помечает IsDeleted = true)",
        "operationId": "_By_logicalName_externalId",
        "parameters": [
          {
            "name": "logicalName",
            "in": "query",
            "description": "a request of the CustomPropertyValue",
            "schema": {
              "type": "string",
              "description": "Название типа объекта на английском",
              "nullable": true
            }
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Идентификатор объекта",
            "schema": {
              "type": "integer",
              "description": "Идентификатор объекта",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/CustomPropertyValues/copy/allvalues": {
      "post": {
        "tags": [
          "CustomPropertyValues"
        ],
        "summary": "Метод копирования всех значений ДД из одного объекта в другой",
        "requestBody": {
          "description": "Команда на копирование с необходимым набором свойств",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFullCopyCustomPropertyValuesByObjectCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFullCopyCustomPropertyValuesByObjectCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFullCopyCustomPropertyValuesByObjectCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFullCopyCustomPropertyValuesByObjectCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/EmployeeDeputies": {
      "get": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Returns paged list of EmployeeDeputies",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeDeputyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[EmployeeDeputyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Creates a EmployeeDeputy",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[EmployeeDeputyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/EmployeeDeputies/occupation/current": {
      "get": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Метод получения замещений текущего авторизованного сотрудника",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeDeputyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[EmployeeDeputyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/EmployeeDeputies/occupation/{id}": {
      "get": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Метод получения списка замещений выбранного сотрудника",
        "operationId": "_By_id_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентфикатор сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентфикатор сотрудника",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeDeputyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeputyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/EmployeeDeputies/company/current": {
      "get": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Метод получения списка замещений сотрудников по компании текущего авторизованного сотрудника",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeDeputyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[EmployeeDeputyResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/EmployeeDeputies/company/{id}": {
      "get": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Метод получения списка замещений сотрудников по выбранной компании/холдингу",
        "operationId": "_By_id_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентфикатор компании",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентфикатор компании",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeDeputyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeputyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/EmployeeDeputies/{id}": {
      "get": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Retrieves a EmployeeDeputy by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeDeputyResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeputyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Updates a EmployeeDeputy by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the EmployeeDeputy",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeDeputyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "EmployeeDeputies"
        ],
        "summary": "Deletes a EmployeeDeputy by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the EmployeeDeputy",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/EmployeeDeputy": {
      "post": {
        "tags": [
          "EmployeeDeputy"
        ],
        "summary": "Creates a EmployeeDeputy",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeputy"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeputy"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDeputy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/EmployeeDeputy/delete": {
      "post": {
        "tags": [
          "EmployeeDeputy"
        ],
        "summary": "Creates a EmployeeDeputy",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.EmployeeDeputyIntegrationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Employees": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.Employee",
        "operationId": "_By_Name_Includes_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Includes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[EmployeeBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Creates a Employee",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[EmployeeBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Employees/{id}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Retrieves a Employee by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeBaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Updates a Employee by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Employee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Employees/current": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Get detail information of current Aeroclub.Expense.Domain.Models.Employee",
        "operationId": "_By_Photo_High_FullName.FirstName.Ru_FullName.FirstName.En_FullName.MiddleName.Ru_FullName.MiddleName.En_FullName.LastName.Ru_FullName.LastName.En_Language.Code_EmployeeViewOptions.ParamName_EmployeeViewOptions.Value",
        "parameters": [
          {
            "name": "Photo",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "High",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FullName.FirstName.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FullName.FirstName.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FullName.MiddleName.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FullName.MiddleName.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FullName.LastName.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FullName.LastName.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Language.Code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmployeeViewOptions.ParamName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmployeeViewOptions.Value",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for EmployeeBaseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[EmployeeBaseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Employees/{id}/settings": {
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Change language and setting Aeroclub.Expense.Domain.Models.Employee",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Employee",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "EmployeeId",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request Aeroclub.Expense.ApiResources.UI.Responses.EmployeeSettingsResponse query parameters",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSettingsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSettingsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSettingsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Environment"
        ],
        "summary": "Returns paged list of Environments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApprovalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ui/ExpenseApplications": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Returns paged list of ExpenseApplications",
        "operationId": "_By_CreatedAdvanceReportApplication_LegalEntityId_OrgUnitId_LocationId_Status_StartOn_EndOn_CityId_CompanyId_Journey_Id_Number_EmployeeId_OccupationId_Personal_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CreatedAdvanceReportApplication",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "LegalEntityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrgUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExpenseApplicationStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "StartOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CityId",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Journey",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Number",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Personal",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ExpenseApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Creates a ExpenseApplication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ExpenseApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/cancel": {
      "put": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Cancel Aeroclub.Expense.Domain.Models.ExpenseApplication by id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the ExpenseApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.ExpenseApplication Id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/short": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Retrieves a ExpenseApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/reinit_linemanager": {
      "post": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Creates a ExpenseApplication",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a ExpenseApplication representation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ExpenseApplicationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/reinit_linemanager_for_assignee": {
      "post": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Creates a ExpenseApplication",
        "operationId": "_By_assigneeEmployeeId",
        "parameters": [
          {
            "name": "assigneeEmployeeId",
            "in": "query",
            "description": "a ExpenseApplication representation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ExpenseApplicationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/history": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Метод получения пагинированного списка событий по объекту Aeroclub.Expense.Domain.Models.ExpenseApplication",
        "operationId": "_By_id_page_pageSize_countOnly",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "идентификатор объекта",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "идентификатор объекта",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "номер страницы",
            "schema": {
              "type": "integer",
              "description": "номер страницы",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "количество записей на странице",
            "schema": {
              "type": "integer",
              "description": "количество записей на странице",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "countOnly",
            "in": "query",
            "description": "признак отображения общего количества заявок, удовлетворяющих параметрам фильтра, без детализации",
            "schema": {
              "type": "boolean",
              "description": "признак отображения общего количества заявок, удовлетворяющих параметрам фильтра, без детализации",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/open": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Returns paged list of ExpenseApplications",
        "operationId": "_By_tripNumber_journeyNumber",
        "parameters": [
          {
            "name": "tripNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "journeyNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ExpenseApplicationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/reports/{type}/{extension}": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Reports",
        "operationId": "_By_id_type_utcOffset_extension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Aeroclub.Expense.Domain.Models.ExpenseApplication id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Aeroclub.Expense.Domain.Models.ExpenseApplication id",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Aeroclub.Expense.Reports.Enums.PrintFormType id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Aeroclub.Expense.Reports.Enums.PrintFormType id",
              "nullable": true
            }
          },
          {
            "name": "utcOffset",
            "in": "query",
            "description": "Сдвиг времени",
            "schema": {
              "type": "integer",
              "description": "Сдвиг времени",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "extension",
            "in": "path",
            "description": "Тип документа",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseApplicationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/reports/types": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Доступные печатные формы",
        "operationId": "_By_companyId_advanceReportApplicationId",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "advanceReportApplicationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ExpenseApplicationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/AdvanceEdit": {
      "put": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Updates a ExpenseApplication by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the ExpenseApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationAdvanceCashAmountRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationAdvanceCashAmountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationAdvanceCashAmountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationAdvanceCashAmountRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}/customproperties": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Метод получения списка дд по объекту Aeroclub.Expense.Domain.Models.ExpenseApplication",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "идентификатор объекта",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "идентификатор объекта",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseApplications/{id}": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Retrieves a ExpenseApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseApplicationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Updates a ExpenseApplication by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the ExpenseApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Deletes a ExpenseApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the ExpenseApplication",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/ExpenseApplications/{id}": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Retrieves a ExpenseApplication by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/ExpenseApplications": {
      "get": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Returns paged list of ExpenseApplications",
        "operationId": "_By_businessTripNumber_journeyNumber",
        "parameters": [
          {
            "name": "businessTripNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "journeyNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Creates a ExpenseApplication",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration.ExpenseApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ExpenseApplications"
        ],
        "summary": "Updates a ExpenseApplication by request",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExpenseApplicationRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Expenses/{id}/used": {
      "put": {
        "tags": [
          "Expenses"
        ],
        "summary": "Метод который изменяет в расходе признак Aeroclub.Expense.Domain.Models.Expense.NotUsed воспользовались ли услугой",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Expense",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.Domain.Models.Expense",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Значение признака воспользовались ли данным расходом (услугой)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean",
                "description": "Значение признака воспользовались ли данным расходом (услугой)"
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean",
                "description": "Значение признака воспользовались ли данным расходом (услугой)"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean",
                "description": "Значение признака воспользовались ли данным расходом (услугой)"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean",
                "description": "Значение признака воспользовались ли данным расходом (услугой)"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Expenses": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Creates a Expense",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ExpenseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Returns paged list of Expenses",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ExpenseResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Expenses/{id}": {
      "put": {
        "tags": [
          "Expenses"
        ],
        "summary": "Updates a Expense by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Expense",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Expenses"
        ],
        "summary": "Deletes a Expense by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Expense",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Retrieves a Expense by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseTypes": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.ExpenseType",
        "operationId": "_By_ApplicationTypeId_CompanyId_OccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ApplicationTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseTypeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ExpenseTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Creates a ExpenseType",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[ExpenseTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseTypes/company/{companyId}": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Метод получения всех Aeroclub.Expense.Domain.Models.ExpenseType по компании",
        "operationId": "_By_companyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Идентификатор Aeroclub.Expense.Domain.Models.Company",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор Aeroclub.Expense.Domain.Models.Company",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseTypeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[ExpenseTypeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/ExpenseTypes/{id}": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Retrieves a ExpenseType by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for ExpenseTypeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Updates a ExpenseType by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the ExpenseType",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Deletes a ExpenseType by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the ExpenseType",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/integration/ExternalApprovalHistory": {
      "post": {
        "tags": [
          "ExternalApprovalHistory"
        ],
        "summary": "Creates a ExternalApprovalHistory",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExternalApprovalHistoryRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExternalApprovalHistoryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExternalApprovalHistoryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Integration.ExternalApprovalHistoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/FederationMetadata/2007-06/FederationMetadata.xml": {
      "get": {
        "tags": [
          "FederationMetadata"
        ],
        "summary": "Returns paged list of FederationMetadatas",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ui/FieldPermissions/read/{entityLogicalName}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Retrieves a FieldPermission by unique id",
        "operationId": "_By_entityLogicalName_id",
        "parameters": [
          {
            "name": "entityLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/FieldPermissions/create/{entityLogicalName}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Returns paged list of FieldPermissions",
        "operationId": "_By_entityLogicalName_baseEntityId_baseEntityLogicalName_companyIds",
        "parameters": [
          {
            "name": "entityLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "baseEntityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "baseEntityLogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "companyIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/FieldPermissions/update/{entityLogicalName}/{id}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Retrieves a FieldPermission by unique id",
        "operationId": "_By_entityLogicalName_id_companyIds",
        "parameters": [
          {
            "name": "entityLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "companyIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/FieldPermissions/general/{entityLogicalName}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Returns paged list of FieldPermissions",
        "operationId": "_By_entityLogicalName_occupationId",
        "parameters": [
          {
            "name": "entityLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "occupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Creates a FieldPermission",
        "operationId": "_By_entityLogicalName_occupationId",
        "parameters": [
          {
            "name": "entityLogicalName",
            "in": "path",
            "description": "a FieldPermission representation",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "occupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/FieldPermissions/general/{entityLogicalName}/{id}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Retrieves a FieldPermission by unique id",
        "operationId": "_By_entityLogicalName_occupationId_id",
        "parameters": [
          {
            "name": "entityLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "occupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/FieldPermissions/general/{parentLogicalName}/{parentId}/{childLogicalName}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Returns paged list of FieldPermissions",
        "operationId": "_By_parentLogicalName_childLogicalName_occupationId_parentId",
        "parameters": [
          {
            "name": "parentLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "childLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "occupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Creates a FieldPermission",
        "operationId": "_By_parentId_parentLogicalName_childLogicalName_occupationId",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "a FieldPermission representation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parentLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "childLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "occupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/FieldPermissions/general/{parentLogicalName}/{parentId}/{childLogicalName}/{childId}": {
      "get": {
        "tags": [
          "FieldPermissions"
        ],
        "summary": "Returns paged list of FieldPermissions",
        "operationId": "_By_parentId_parentLogicalName_childId_childLogicalName_occupationId",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parentLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "childId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "childLogicalName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "occupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralPermissionsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/History": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "Returns paged list of Histories",
        "operationId": "_By_Identifiers_EntityObjects_IntervalBegin_IntervalEnd_AuditEventTypes_ExcludeAuditEventTypes_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "Identifiers",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "EntityObjects",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntityAuditObject"
              },
              "nullable": true
            }
          },
          {
            "name": "IntervalBegin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IntervalEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "AuditEventTypes",
            "in": "query",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AuditEventTypeId"
              },
              "nullable": true
            }
          },
          {
            "name": "ExcludeAuditEventTypes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AuditEventTypeId"
              },
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AuditEvent]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AuditEvent]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[AuditEvent]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/History/{id}": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "Retrieves a History by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/LedgerAccounts": {
      "get": {
        "tags": [
          "LedgerAccounts"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.LedgerAccount",
        "operationId": "_By_CompanyId_TransactionId_OccupationId_SearchRequest_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "TransactionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SearchRequest",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for LedgerAccountResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LedgerAccountResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "LedgerAccounts"
        ],
        "summary": "Creates a LedgerAccount",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[LedgerAccountResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/LedgerAccounts/{id}": {
      "get": {
        "tags": [
          "LedgerAccounts"
        ],
        "summary": "Retrieves a LedgerAccount by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for LedgerAccountResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LedgerAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "LedgerAccounts"
        ],
        "summary": "Updates a LedgerAccount by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the LedgerAccount",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "LedgerAccounts"
        ],
        "summary": "Deletes a LedgerAccount by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the LedgerAccount",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/LegalEntity": {
      "get": {
        "tags": [
          "LegalEntity"
        ],
        "summary": "Returns paged list of LegalEntities",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LegalEntityResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LegalEntityResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LegalEntityResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/LinkToExternalApplication/{application}": {
      "get": {
        "tags": [
          "LinkToExternalApplication"
        ],
        "summary": "Returns paged list of LinkToExternalApplications",
        "operationId": "_By_application_journeyNumber_businessTripNumber",
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ExternalApplications"
            }
          },
          {
            "name": "journeyNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "businessTripNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns paged list of Locations",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LocationResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LocationResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[LocationResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/MeetingParticipants": {
      "get": {
        "tags": [
          "MeetingParticipants"
        ],
        "summary": "Получение всех участников встречи по заданному фильтру",
        "operationId": "_By_AdvanceReportAdditionalDocumentId_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "AdvanceReportAdditionalDocumentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[MeetingParticipantResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[MeetingParticipantResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[MeetingParticipantResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "MeetingParticipants"
        ],
        "summary": "Создание участника встречи",
        "requestBody": {
          "description": "Данные для создания участника встречи",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingParticipantCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingParticipantCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingParticipantCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MeetingParticipantCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingParticipantResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingParticipantResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingParticipantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MeetingParticipants"
        ],
        "summary": "Удаление участника встречи",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "a unique id of the MeetingParticipant",
            "schema": {
              "type": "integer",
              "description": "Id участника встречи",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/MeetingParticipants/{id}": {
      "get": {
        "tags": [
          "MeetingParticipants"
        ],
        "summary": "Получение деталей по участнику встречи",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id участника встречи",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Id участника встречи",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingParticipantResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingParticipantResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingParticipantResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/bulk": {
      "delete": {
        "tags": [
          "MeetingParticipants"
        ],
        "summary": "Удаление участников встречи",
        "requestBody": {
          "description": "Ids участников встречи",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Ids участников встречи",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Ids участников встречи",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Ids участников встречи",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": "Ids участников встречи",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Returns paged list of Notifications",
        "operationId": "_By_All_From_To_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "All",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "From",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "To",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[NotificationResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[NotificationResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[NotificationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Creates a Notification",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationInitiateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationInitiateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationInitiateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationInitiateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates a Notification by request",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Notifications/{id}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Retrieves a Notification by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates a Notification by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Notification",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Deletes a Notification by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Notification",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Notifications/{id}/send": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Updates a Notification by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Notification",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Occupations/short": {
      "get": {
        "tags": [
          "Occupations"
        ],
        "summary": "Возвращает назначения сотрудника в указанной компании",
        "operationId": "_By_employeeId_companyId",
        "parameters": [
          {
            "name": "employeeId",
            "in": "query",
            "description": "Id сотрудника в назначении",
            "schema": {
              "type": "integer",
              "description": "Id сотрудника в назначении",
              "format": "int32"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Id компании в назначении",
            "schema": {
              "type": "integer",
              "description": "Id компании в назначении",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for OccupationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[OccupationResponse]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Occupations": {
      "get": {
        "tags": [
          "Occupations"
        ],
        "summary": "Returns paged list of Occupations",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for OccupationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[OccupationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Occupations"
        ],
        "summary": "Creates a Occupation",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[OccupationResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Occupations/{id}": {
      "get": {
        "tags": [
          "Occupations"
        ],
        "summary": "Retrieves a Occupation by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for OccupationResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OccupationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Occupations"
        ],
        "summary": "Updates a Occupation by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Occupation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OccupationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Occupations"
        ],
        "summary": "Deletes a Occupation by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Occupation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/OrgUnit": {
      "get": {
        "tags": [
          "OrgUnit"
        ],
        "summary": "Returns paged list of OrgUnits",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[OrgUnitShortResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[OrgUnitShortResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[OrgUnitShortResponse]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PaperWorks": {
      "post": {
        "tags": [
          "PaperWorks"
        ],
        "summary": "Метод закрепляет АО/ЗНР за сотрудником (на текущий момент бухгалтером) в процессе согласования, если требуется согласование по типу \"хотя бы 1 из группы\"",
        "requestBody": {
          "description": "Входные параметры ObjectLogicalName и ObjectID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "PaperWorks"
        ],
        "summary": "Метод проставляет время и дату в поле PaperWork.EndedOn по запросу, что означает прекращение работы пользователем над объектом",
        "requestBody": {
          "description": "Входные параметры ObjectLogicalName и ObjectID",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaperWorkRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PaymentFormMap": {
      "get": {
        "tags": [
          "PaymentFormMap"
        ],
        "summary": "Returns paged list of PaymentFormMaps",
        "operationId": "_By_ApplicationTypeId_ExpenseTypeId_PaymentFormId_CompanyId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ApplicationTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExpenseTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PaymentFormId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for PaymentFormMapResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[PaymentFormMapResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "PaymentFormMap"
        ],
        "summary": "Creates a PaymentFormMap",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[PaymentFormMapResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PaymentFormMap/{id}": {
      "get": {
        "tags": [
          "PaymentFormMap"
        ],
        "summary": "Retrieves a PaymentFormMap by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for PaymentFormMapResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentFormMapResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "PaymentFormMap"
        ],
        "summary": "Updates a PaymentFormMap by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the PaymentFormMap",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormMapRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PaymentFormMap"
        ],
        "summary": "Deletes a PaymentFormMap by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the PaymentFormMap",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PaymentForms": {
      "get": {
        "tags": [
          "PaymentForms"
        ],
        "summary": "Returns paged list of PaymentForms",
        "operationId": "_By_ApplicationTypeId_ExpenseTypeId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ApplicationTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ExpenseTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for PaymentFormResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[PaymentFormResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "PaymentForms"
        ],
        "summary": "Creates a PaymentForm",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[PaymentFormResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PaymentForms/{id}": {
      "get": {
        "tags": [
          "PaymentForms"
        ],
        "summary": "Retrieves a PaymentForm by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for PaymentFormResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentFormResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "PaymentForms"
        ],
        "summary": "Updates a PaymentForm by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the PaymentForm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentFormRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PaymentForms"
        ],
        "summary": "Deletes a PaymentForm by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the PaymentForm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PerDiemBudgeting/preview": {
      "post": {
        "tags": [
          "PerDiemBudgeting"
        ],
        "summary": "Предварительный расчет суточных для командировки",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "a PerDiemBudgeting representation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Параметры рассчета",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemPreviewCalculationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemPreviewCalculationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemPreviewCalculationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemPreviewCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PerDiemPreviewCalculationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerDiemPreviewCalculationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerDiemPreviewCalculationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PerDiemCalculations/{id}": {
      "get": {
        "tags": [
          "PerDiemCalculations"
        ],
        "summary": "Retrieves a PerDiemCalculation by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PerDiemCalculations/byObject/details": {
      "get": {
        "tags": [
          "PerDiemCalculations"
        ],
        "summary": "Метод получения детализации с параметрами расчета и калькуляцией Aeroclub.Expense.Domain.Models.PerDiems.PerDiemCalculation по (ЗНР/АО)",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Response[PerDiemCalculationDetailResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[PerDiemCalculationDetailResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[PerDiemCalculationDetailResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PerDiemCalculations": {
      "post": {
        "tags": [
          "PerDiemCalculations"
        ],
        "summary": "Метод создания Aeroclub.Expense.Domain.Models.PerDiems.PerDiemCalculation в связке с параметрами и значениями данных параметров",
        "requestBody": {
          "description": "Реквест Aeroclub.Expense.ApiResources.UI.Requests.PerDiemCalculationRequest на создание (к одному Calculation - много PerDiemParameterValue)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "PerDiemCalculations"
        ],
        "summary": "Метод редактирования Aeroclub.Expense.Domain.Models.PerDiems.PerDiemCalculation в связке с параметрами и значениями данных параметров (заменяем полностью)",
        "requestBody": {
          "description": "Реквест Aeroclub.Expense.ApiResources.UI.Requests.PerDiemCalculationRequest на обновление",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PerDiemCalculationRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/PerDiemParameters/company/{companyId}": {
      "get": {
        "tags": [
          "PerDiemParameters"
        ],
        "summary": "Получение параметров Aeroclub.Expense.Domain.Models.PerDiems.PerDiemParameter доступных для компании для расчета суточных по идентфиикатору компании",
        "operationId": "_By_companyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "Идентификатор компании по которой необходимо получить все доступные параметры",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор компании по которой необходимо получить все доступные параметры",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerDiemParameterResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerDiemParameterResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerDiemParameterResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Returns paged list of Permissions",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for PermissionResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[PermissionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Creates a Permission",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[PermissionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Permissions/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Retrieves a Permission by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for PermissionResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "Updates a Permission by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Permission",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Permissions"
        ],
        "summary": "Deletes a Permission by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Permission",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Reminder/company/{companyId}/{configNotify}": {
      "put": {
        "tags": [
          "Reminder"
        ],
        "summary": "Отладочный метод, для запуска Ремайндера по конкретной компании и роли для уведомлений\r\nHangFire job из storage",
        "operationId": "_By_companyId_configNotify",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "a request of the Reminder",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Идентификатор компании",
              "format": "int32"
            }
          },
          {
            "name": "configNotify",
            "in": "path",
            "description": "Настройка роли (NotifyUserOfBalance, NotifyLineManagerOfBalance, NotifyAccountantOfBalance)",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Настройка роли (NotifyUserOfBalance, NotifyLineManagerOfBalance, NotifyAccountantOfBalance)",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Reminder/setup": {
      "put": {
        "tags": [
          "Reminder"
        ],
        "summary": "Отладочный метод, для настройки ремайндеров по всем компаниям у которых есть включенные настройки\r\nФормирует job-ы и кладёт их в HangFire storage\r\nЗапускается через 5 секунд после выполнения",
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.Role",
        "operationId": "_By_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for RoleResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[RoleResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Creates a Role",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[RoleResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Retrieves a Role by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for RoleResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Updates a Role by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Role",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Deletes a Role by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the Role",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns paged list of Settings",
        "operationId": "_By_SettingCodeCheck_ObjectTypeCheck_SettingTypeCheck_ValueBoolCheck_ValueIntCheck_ValueStringCheck_CompanyIdCheck_RoleIdCheck_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "SettingCodeCheck",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectTypeCheck",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ExpenseObjectType"
            }
          },
          {
            "name": "SettingTypeCheck",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SettingType"
            }
          },
          {
            "name": "ValueBoolCheck",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ValueIntCheck",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ValueStringCheck",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyIdCheck",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RoleIdCheck",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[SettingResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[SettingResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[SettingResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Settings/{settingCode}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns paged list of Settings",
        "operationId": "_By_settingCode_SettingCodeCheck_ObjectTypeCheck_SettingTypeCheck_ValueBoolCheck_ValueIntCheck_ValueStringCheck_CompanyIdCheck_RoleIdCheck_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "settingCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SettingCodeCheck",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectTypeCheck",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ExpenseObjectType"
            }
          },
          {
            "name": "SettingTypeCheck",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SettingType"
            }
          },
          {
            "name": "ValueBoolCheck",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ValueIntCheck",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ValueStringCheck",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyIdCheck",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RoleIdCheck",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[SettingResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[SettingResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[SettingResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Settings/company/{companyId}/{settingCode}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Returns paged list of Settings",
        "operationId": "_By_companyId_settingCode",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "settingCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/State": {
      "get": {
        "tags": [
          "State"
        ],
        "summary": "Returns paged list of States",
        "operationId": "_By_Id_LogicalName_Name.Ru_Name.En_ReferenceId",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LogicalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.Ru",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name.En",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferenceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "State"
        ],
        "summary": "Set state of application",
        "requestBody": {
          "description": "Current app state data",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationTransitionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationTransitionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationTransitionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdvanceReportApplicationTransitionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Supports": {
      "post": {
        "tags": [
          "Supports"
        ],
        "summary": "Cозданиe запроса в тех. поддержку и отправка Email на адрес техподдержки",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "nullable": true
                  },
                  "Content": {
                    "type": "string",
                    "nullable": true
                  },
                  "Actor.Id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Actor.FullName.Ru": {
                    "type": "string",
                    "nullable": true
                  },
                  "Actor.FullName.En": {
                    "type": "string",
                    "nullable": true
                  },
                  "Actor.Login": {
                    "type": "string",
                    "nullable": true
                  },
                  "Stamp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "Url": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "Attachments": {
                  "style": "form"
                },
                "Content": {
                  "style": "form"
                },
                "Actor.Id": {
                  "style": "form"
                },
                "Actor.FullName.Ru": {
                  "style": "form"
                },
                "Actor.FullName.En": {
                  "style": "form"
                },
                "Actor.Login": {
                  "style": "form"
                },
                "Stamp": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/TaxCodes": {
      "get": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Get list of Aeroclub.Expense.Domain.Models.TaxCode",
        "operationId": "_By_CompanyId_OccupationId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "CompanyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for TaxCodeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TaxCodeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Creates a TaxCode",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[TaxCodeResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/TaxCodes/{id}": {
      "get": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Retrieves a TaxCode by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paged response for TaxCodeResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response[T]"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Updates a TaxCode by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the TaxCode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCodeRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Deletes a TaxCode by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a unique id of the TaxCode",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Retrieves a Transaction by unique id",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Updates a Transaction by request",
        "operationId": "_By_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request of the Transaction",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Returns paged list of Transactions",
        "operationId": "_By_ObjectId_ObjectType_PostingKey_Lager_EmployeeId_IncludeDeleted_Page_PageSize_CountOnly",
        "parameters": [
          {
            "name": "ObjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ObjectType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PostingKey",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransactionPostingKey"
            }
          },
          {
            "name": "Lager",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionResponse]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionResponse]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponse[TransactionResponse]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Creates a Transaction",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionBaseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionBaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionBaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionBaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Updates a Transaction by request",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    },
    "/ui/Transactions/download": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Формирование файла с выгрузкой проводок в формате .xlsx",
        "operationId": "_By_ObjectType_ObjectIds_PostingDate_LoadDateStart_LoadDateEnd_LastLoadDateStart_LastLoadDateEnd_BatchState_IsExternal_EmployeeId_OccupationId_CreateDate_JourneyNum_JourneyStartDate_JourneyEndDate_CitiesIds",
        "parameters": [
          {
            "name": "ObjectType",
            "in": "query",
            "description": "a Transaction representation",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ObjectIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "PostingDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LoadDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LoadDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastLoadDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "BatchState",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransactionBatchState"
            }
          },
          {
            "name": "IsExternal",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OccupationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CreateDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "JourneyNum",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "JourneyStartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "JourneyEndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CitiesIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "expense.swagger.ui"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MeetingParticipantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "occupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fio": {
            "type": "string",
            "nullable": true
          },
          "occupationName": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "isResponsibleForMeeting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportAdditionalDocumentExpenseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportAdditionalDocumentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "string",
            "nullable": true
          },
          "actNumber": {
            "type": "string",
            "nullable": true
          },
          "meetingDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "meetingPlace": {
            "type": "string",
            "nullable": true
          },
          "meetingParticipants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeetingParticipantResponse"
            },
            "nullable": true
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentExpenseResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportAdditionalDocumentType": {
        "enum": [
          0
        ],
        "type": "integer",
        "format": "int32"
      },
      "AdvanceReportAdditionalDocumentUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "actNumber": {
            "type": "string",
            "nullable": true
          },
          "meetingDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentType"
          },
          "entityObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true
          },
          "meetingPlace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportAdditionalDocumentCreateRequest": {
        "type": "object",
        "properties": {
          "meetingDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentType"
          },
          "entityObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true
          },
          "meetingPlace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportExtension": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "AdvanceReportApplicationStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "Name": {
        "type": "object",
        "properties": {
          "ru": {
            "type": "string",
            "nullable": true
          },
          "en": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "logicalName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "JourneyResponse": {
        "type": "object",
        "properties": {
          "journeyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTravelDatesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BusinessTripDestinationResponse": {
        "type": "object",
        "properties": {
          "city": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "arrivalOn": {
            "type": "string",
            "format": "date-time"
          },
          "leaveOn": {
            "type": "string",
            "format": "date-time"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationTypeReferenceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "EmployeeReferenceResponseWithOccupationId": {
        "type": "object",
        "properties": {
          "occupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeReferenceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "groupCode": {
            "type": "string",
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "expenseGroup": {
            "$ref": "#/components/schemas/ExpenseGroupResponse"
          },
          "needIncludeToAdvanceReportAdditionalDocuments": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CurrencyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "numCode": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "alphaCode": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseRelationResponse": {
        "type": "object",
        "properties": {
          "relatedExpenseId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "expenseType": {
            "$ref": "#/components/schemas/ExpenseTypeResponse"
          },
          "external": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountCurrency": {
            "$ref": "#/components/schemas/CurrencyResponse"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "paymentForm": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "advanceCashRequired": {
            "type": "boolean"
          },
          "approvedAmountRub": {
            "type": "number",
            "format": "double"
          },
          "approvedAmountComment": {
            "type": "string",
            "nullable": true
          },
          "billNumber": {
            "type": "string",
            "nullable": true
          },
          "billDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billAmountCurrencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amountCurrencyRate": {
            "type": "number",
            "format": "double"
          },
          "accountableFormNumber": {
            "type": "string",
            "nullable": true
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseRelationResponse"
            },
            "nullable": true
          },
          "notUsed": {
            "type": "boolean",
            "nullable": true
          },
          "showNotAttachmentAlert": {
            "type": "boolean"
          },
          "adjustAdvanceAmountWarning": {
            "type": "boolean"
          },
          "copiedFromExpenseApplicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "approvedAmountCurrency": {
            "$ref": "#/components/schemas/CurrencyResponse"
          },
          "approvedAmountCurrencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaperWorkResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeName": {
            "$ref": "#/components/schemas/Name"
          },
          "startedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportApplicationResponse": {
        "type": "object",
        "properties": {
          "expenseApplicationNumber": {
            "type": "string",
            "nullable": true
          },
          "expenseApplication": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "journey": {
            "$ref": "#/components/schemas/JourneyResponse"
          },
          "applicationTravelDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTravelDatesResponse"
            },
            "nullable": true
          },
          "businessTripDestination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessTripDestinationResponse"
            },
            "nullable": true
          },
          "additionalDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvanceReportAdditionalDocumentResponse"
            },
            "nullable": true
          },
          "approvedAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "approvedTotalAmount": {
            "type": "number",
            "format": "double"
          },
          "approvedReportAmount": {
            "type": "number",
            "format": "double"
          },
          "startApprovalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationTypeReferenceResponse"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "assigneeEmployee": {
            "$ref": "#/components/schemas/EmployeeReferenceResponseWithOccupationId"
          },
          "createdByEmployee": {
            "$ref": "#/components/schemas/EmployeeReferenceResponse"
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "company": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "departureFromCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "arrivalToCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseResponse"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "businessTarget": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "advanceCashAmount": {
            "type": "number",
            "format": "double"
          },
          "lineManager": {
            "$ref": "#/components/schemas/EmployeeReferenceResponse"
          },
          "personalDaysNumber": {
            "type": "integer",
            "format": "int32"
          },
          "paperWork": {
            "$ref": "#/components/schemas/PaperWorkResponse"
          },
          "isActive": {
            "type": "boolean"
          },
          "postingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[AdvanceReportApplicationResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "T": {
        "type": "object",
        "additionalProperties": false
      },
      "Response[T]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/T"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessTripDestinationRequest": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "arrivalOn": {
            "type": "string",
            "format": "date-time"
          },
          "leaveOn": {
            "type": "string",
            "format": "date-time"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BusinessTripOptionRequest": {
        "type": "object",
        "properties": {
          "departureFromCityId": {
            "type": "integer",
            "format": "int32"
          },
          "arrivalToCityId": {
            "type": "integer",
            "format": "int32"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "personalDaysNumber": {
            "type": "integer",
            "format": "int32"
          },
          "applicationTravelDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateRange"
            },
            "nullable": true
          },
          "businessTripDestination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessTripDestinationRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseRequest": {
        "type": "object",
        "properties": {
          "applicationId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "advanceCashRequired": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountCurrencyId": {
            "type": "integer",
            "format": "int32"
          },
          "amountRub": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentFormId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amountCurrencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "billNumber": {
            "type": "string",
            "nullable": true
          },
          "billDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approvedAmountRub": {
            "type": "number",
            "format": "double"
          },
          "approvedAmountComment": {
            "type": "string",
            "nullable": true
          },
          "accountableFormNumber": {
            "type": "string",
            "nullable": true
          },
          "approvedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "approvedAmountCurrencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedAmountCurrencyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportApplicationRequest": {
        "type": "object",
        "properties": {
          "applicationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "journeyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripNumber": {
            "type": "integer",
            "format": "int32"
          },
          "advanceCashAmount": {
            "type": "number",
            "format": "double"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripOption": {
            "$ref": "#/components/schemas/BusinessTripOptionRequest"
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseRequest"
            },
            "nullable": true
          },
          "businessTargetId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "occupationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[AdvanceReportApplicationResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/AdvanceReportApplicationResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AuditEventTypeId": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          64,
          70,
          71,
          72,
          73,
          300
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuditObjectType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuditChangeType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuditObjectChange": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "$ref": "#/components/schemas/AuditChangeType"
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "oldNameRu": {
            "type": "string",
            "nullable": true
          },
          "oldNameEn": {
            "type": "string",
            "nullable": true
          },
          "newNameRu": {
            "type": "string",
            "nullable": true
          },
          "newNameEn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/AuditObjectType"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditObjectChange"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "$ref": "#/components/schemas/Name"
          },
          "login": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditEvent": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "stamp": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/AuditEventTypeId"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditObject"
            },
            "nullable": true
          },
          "error": {
            "$ref": "#/components/schemas/AuditError"
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "description": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[AuditEvent]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTypeResponse": {
        "type": "object",
        "properties": {
          "applicationType": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[ApplicationTypeResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTypeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationTypeRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "Response[ApplicationTypeResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ApplicationTypeResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "started": {
            "type": "string",
            "format": "date-time"
          },
          "completedPlan": {
            "type": "string",
            "format": "date-time"
          },
          "completedFact": {
            "type": "string",
            "format": "date-time"
          },
          "resolution": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityReference"
            },
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetState": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ApprovalSheetActionRequest": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ApprovalSheetState"
          }
        },
        "additionalProperties": false
      },
      "PaperWorkEnum": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ApprovalResolution": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExpenseTypeShortResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "groupCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationShortResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployee": {
            "$ref": "#/components/schemas/EmployeeReferenceResponse"
          },
          "assigneeEmployee": {
            "$ref": "#/components/schemas/EmployeeReferenceResponse"
          },
          "departureFromCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "arrivalToCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "businessTarget": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationTypeReferenceResponse"
          },
          "expenseTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseTypeShortResponse"
            },
            "nullable": true
          },
          "logicalName": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "paperWork": {
            "$ref": "#/components/schemas/PaperWorkResponse"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approvalSheetId": {
            "type": "integer",
            "format": "int32"
          },
          "assigneeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assigneeOccupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "completedAtPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "resolution": {
            "$ref": "#/components/schemas/ApprovalResolution"
          },
          "completedAtFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "object": {
            "$ref": "#/components/schemas/ApplicationShortResponse"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[ApprovalItemResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalItemResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetRequest": {
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityReference"
            },
            "nullable": true
          },
          "completedAtPlan": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AssertionRequest": {
        "type": "object",
        "properties": {
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityReference"
            },
            "nullable": true
          },
          "completedAtPlan": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApprovalItemResolutionRequest": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "nullable": true
          },
          "resolution": {
            "$ref": "#/components/schemas/ApprovalResolution"
          }
        },
        "additionalProperties": false
      },
      "ApprovalItemRenewRequest": {
        "type": "object",
        "properties": {
          "commentImproved": {
            "type": "string",
            "nullable": true
          },
          "improvedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApprovalItemPermissionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "approvalSheetId": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "currentApprovalTierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalOccupationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "employee": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "ApprovalAssignedResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "occupation": {
            "$ref": "#/components/schemas/ApprovalOccupationResponse"
          },
          "approvedByName": {
            "$ref": "#/components/schemas/Name"
          },
          "completedAtPlan": {
            "type": "string",
            "format": "date-time"
          },
          "completedAtFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolution": {
            "type": "string",
            "nullable": true
          },
          "costCenterCode": {
            "type": "string",
            "nullable": true
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalTierResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "composition": {
            "type": "string",
            "nullable": true
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "$ref": "#/components/schemas/Name"
          },
          "approvalItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalAssignedResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalDataResponse": {
        "type": "object",
        "properties": {
          "approvalSheet": {
            "$ref": "#/components/schemas/ApprovalSheetResponse"
          },
          "approvalTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalTierResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceGroupedEmployeeResponse": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "integer",
            "format": "int32"
          },
          "assistantName": {
            "$ref": "#/components/schemas/Name"
          },
          "assistantOccupationName": {
            "$ref": "#/components/schemas/Name"
          },
          "numberOfAssistances": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[AssistanceGroupedEmployeeResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistanceGroupedEmployeeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssistanceRequest": {
        "type": "object",
        "properties": {
          "assistantOccupationId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeOccupationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssistanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "assistantOccupationId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeOccupationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AssistanceDetailItemResponse": {
        "type": "object",
        "properties": {
          "assistanceId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeOccupationId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeOccupationName": {
            "$ref": "#/components/schemas/Name"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employeeName": {
            "$ref": "#/components/schemas/Name"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          }
        },
        "additionalProperties": false
      },
      "AssistanceDetailResponse": {
        "type": "object",
        "properties": {
          "assistantId": {
            "type": "integer",
            "format": "int32"
          },
          "assistances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssistanceDetailItemResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Response[AssistanceDetailResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/AssistanceDetailResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Integration.AssistanceIntegrationRequest": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "nullable": true
          },
          "employee": {
            "type": "string",
            "nullable": true
          },
          "assistant": {
            "type": "string",
            "nullable": true
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "objectId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Response[AttachmentResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/AttachmentResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[AttachmentResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionPostingKey": {
        "enum": [
          21,
          31,
          40,
          50
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransactionsByBatchDetailsResponse": {
        "type": "object",
        "properties": {
          "costCenter": {
            "$ref": "#/components/schemas/Name"
          },
          "employee": {
            "$ref": "#/components/schemas/Name"
          },
          "businessTarget": {
            "$ref": "#/components/schemas/Name"
          },
          "txText": {
            "type": "string",
            "nullable": true
          },
          "ledgerOrVendor": {
            "type": "string",
            "nullable": true
          },
          "postingKey": {
            "type": "integer",
            "format": "int32"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "dc": {
            "type": "string",
            "nullable": true
          },
          "docType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Actor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "$ref": "#/components/schemas/Name"
          },
          "login": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionBatchResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "loadedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLoadedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "author": {
            "$ref": "#/components/schemas/Actor"
          },
          "transactionsCount": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[TransactionBatchResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionBatchResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseObjectType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransactionBatchState": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "FullName": {
        "type": "object",
        "properties": {
          "firstName": {
            "$ref": "#/components/schemas/Name"
          },
          "middleName": {
            "$ref": "#/components/schemas/Name"
          },
          "lastName": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "TransactionBatchForExpenseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "$ref": "#/components/schemas/FullName"
          },
          "transactionBatchState": {
            "type": "integer",
            "format": "int32"
          },
          "referenceId": {
            "type": "integer",
            "format": "int32"
          },
          "referenceType": {
            "type": "string",
            "nullable": true
          },
          "referenceState": {
            "type": "string",
            "nullable": true
          },
          "loadedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLoadedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[TransactionBatchForExpenseResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionBatchForExpenseResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BudgetCodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "budgetGroupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[BudgetCodeResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetCodeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BudgetCodeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "budgetGroupId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[BudgetCodeResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/BudgetCodeResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BudgetGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[BudgetGroupResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetGroupResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BudgetGroupRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[BudgetGroupResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/BudgetGroupResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BudgetResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "costCenterId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[BudgetResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BudgetRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "validFrom": {
            "type": "string",
            "format": "date-time"
          },
          "validTo": {
            "type": "string",
            "format": "date-time"
          },
          "costCenterId": {
            "type": "integer",
            "format": "int32"
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[BudgetResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/BudgetResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BusinessTargetResponse": {
        "type": "object",
        "properties": {
          "businessTarget": {
            "$ref": "#/components/schemas/EntityReference"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[BusinessTargetResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessTargetResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessTargetRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "Response[BusinessTargetResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/BusinessTargetResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CityBaseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[CityBaseResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityBaseResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CityRequest": {
        "type": "object",
        "properties": {
          "iata": {
            "type": "string",
            "nullable": true
          },
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          },
          "indexA": {
            "type": "integer",
            "format": "int32"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Response[CityBaseResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CityBaseResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GeoPoint": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "float"
          },
          "lng": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "Integration.CityRequest": {
        "type": "object",
        "properties": {
          "iata": {
            "type": "string",
            "nullable": true
          },
          "indexA": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "countryAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClearingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "object": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "amountRub": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "beginigBalance": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "finalBalance": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "applicationReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityReference"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PagedClearingResponse[ClearingResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClearingResponse"
            },
            "nullable": true
          },
          "balance": {
            "$ref": "#/components/schemas/BalanceResponse"
          }
        },
        "additionalProperties": false
      },
      "OrderingDirection": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CommunicationMessageType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ActionStamp": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "actor": {
            "$ref": "#/components/schemas/Actor"
          }
        },
        "additionalProperties": false
      },
      "CommunicationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "read": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "created": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "modified": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "deleted": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "sent": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "receivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Actor"
            },
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "messageType": {
            "$ref": "#/components/schemas/CommunicationMessageType"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[CommunicationResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommunicationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommunicationRequest": {
        "type": "object",
        "properties": {
          "sent": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "receivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Actor"
            },
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "messageType": {
            "$ref": "#/components/schemas/CommunicationMessageType"
          }
        },
        "additionalProperties": false
      },
      "Response[CommunicationResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CommunicationResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Integration.CommunicationIntegrationRequest": {
        "type": "object",
        "properties": {
          "employeeAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "sent": {
            "$ref": "#/components/schemas/ActionStamp"
          },
          "receivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Actor"
            },
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "object": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "messageType": {
            "$ref": "#/components/schemas/CommunicationMessageType"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[CompanyResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[CompanyResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CompanyConfig": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "occupationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfigValuesRequest": {
        "type": "object",
        "properties": {
          "configCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyConfigs": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "occupationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "configValues": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "extensionNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[ContactResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "extensionNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Response[ContactResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ContactResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CountryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "isVisible": {
            "type": "boolean"
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          },
          "codeAlpha3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[CountryResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryRequest": {
        "type": "object",
        "properties": {
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Response[CountryResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CountryResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Integration.CountryRequest": {
        "type": "object",
        "properties": {
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          },
          "codeAlpha3": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "cities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.CityRequest"
            },
            "nullable": true
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[CurrencyResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyRequest": {
        "type": "object",
        "properties": {
          "numCode": {
            "type": "integer",
            "format": "int32"
          },
          "alphaCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[CurrencyResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CurrencyResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Integration.CurrencyRateIntegrationRequest": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "format": "int32"
          },
          "targetCurrencyId": {
            "type": "integer",
            "format": "int32"
          },
          "currencyAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "targetCurrencyAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "rateDate": {
            "type": "string",
            "format": "date-time"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Lifetime": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "numCode": {
            "type": "integer",
            "format": "int32"
          },
          "alphaCode": {
            "type": "string",
            "nullable": true
          },
          "rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyRate"
            },
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CurrencyRate": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "currencyId": {
            "type": "integer",
            "format": "int32"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "targetCurrencyId": {
            "type": "integer",
            "format": "int32"
          },
          "targetCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "rateDate": {
            "type": "string",
            "format": "date-time"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CurrencyRateResponse": {
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "integer",
            "format": "int32"
          },
          "targetCurrencyId": {
            "type": "integer",
            "format": "int32"
          },
          "rateDate": {
            "type": "string",
            "format": "date-time"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "alternateKey": {
            "type": "integer",
            "format": "int32"
          },
          "isVisible": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[CurrencyRateResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyRateResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyRateRequest": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Response[CurrencyRateResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CurrencyRateResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomPropertyResource": {
        "type": "object",
        "properties": {
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "companyKey": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "isProfileProperty": {
            "type": "boolean"
          },
          "isChangeable": {
            "type": "boolean"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "isList": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomPropertyDescription": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomPropertyCommand": {
        "type": "object",
        "properties": {
          "companyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectLogicalNameIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "codeId": {
            "type": "integer",
            "format": "int32"
          },
          "expressionId": {
            "type": "integer",
            "format": "int32"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "clientEn": {
            "type": "string",
            "nullable": true
          },
          "clientRu": {
            "type": "string",
            "nullable": true
          },
          "isList": {
            "type": "boolean"
          },
          "description": {
            "$ref": "#/components/schemas/CustomPropertyDescription"
          },
          "isAllocationAvailable": {
            "type": "boolean"
          },
          "isProfile": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "isChangeable": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "fieldSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomPropertyCommand": {
        "type": "object",
        "properties": {
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "$ref": "#/components/schemas/CustomPropertyDescription"
          },
          "isAllocationAvailable": {
            "type": "boolean"
          },
          "isProfile": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "isChangeable": {
            "type": "boolean"
          },
          "isList": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "fieldSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomPropertyJunctionsCommand": {
        "type": "object",
        "properties": {
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "companyIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "objectLogicalNameIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "codeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expressionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomPropertyAttributesCommand": {
        "type": "object",
        "properties": {
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateValueOnValueDependencyCommand": {
        "type": "object",
        "properties": {
          "dependListValueId": {
            "type": "integer",
            "format": "int32"
          },
          "unDependListValueId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreatePropertyOnValueDependencyCommand": {
        "type": "object",
        "properties": {
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "customPropertyListValueId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AttributeValueInputDto": {
        "type": "object",
        "properties": {
          "customPropertyAttributeId": {
            "type": "integer",
            "format": "int32"
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomPropertyListValueCommand": {
        "type": "object",
        "properties": {
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attributesValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueInputDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomPropertyListValueCommand": {
        "type": "object",
        "properties": {
          "customPropertyListValueId": {
            "type": "integer",
            "format": "int32"
          },
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attributesValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueInputDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomPropertyWithValueDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "customPropertyListValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "isAllocation": {
            "type": "boolean"
          },
          "percent": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomPropertyValuesByObjectCommand": {
        "type": "object",
        "properties": {
          "objectLogicalNameId": {
            "type": "integer",
            "format": "int32"
          },
          "externalObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "valueItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomPropertyWithValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatableCustomPropertyWithValueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "parentKey": {
            "type": "string",
            "nullable": true
          },
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "customPropertyListValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "isAllocation": {
            "type": "boolean"
          },
          "percent": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomPropertyValuesCommand": {
        "type": "object",
        "properties": {
          "objectLogicalNameId": {
            "type": "integer",
            "format": "int32"
          },
          "externalObjectId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "valueItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatableCustomPropertyWithValueDto"
            },
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateFullCopyCustomPropertyValuesByObjectCommand": {
        "type": "object",
        "properties": {
          "fromObjectLogicalName": {
            "type": "string",
            "nullable": true
          },
          "fromExternalId": {
            "type": "integer",
            "format": "int32"
          },
          "toObjectLogicalName": {
            "type": "string",
            "nullable": true
          },
          "toExternalId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeNameResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OccupationBaseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeNameResponse"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeDeputyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "employeeOccupation": {
            "$ref": "#/components/schemas/OccupationBaseResponse"
          },
          "deputyOccupation": {
            "$ref": "#/components/schemas/OccupationBaseResponse"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "$ref": "#/components/schemas/RoleResponse"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[EmployeeDeputyResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeDeputyResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeDeputyRequest": {
        "type": "object",
        "properties": {
          "employeeOccupationId": {
            "type": "integer",
            "format": "int32"
          },
          "deputyOccupationId": {
            "type": "integer",
            "format": "int32"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[EmployeeDeputyResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/EmployeeDeputyResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Integration.EmployeeDeputyIntegrationRequest": {
        "type": "object",
        "properties": {
          "companyKey": {
            "type": "string",
            "nullable": true
          },
          "responsibleEmployeeKey": {
            "type": "string",
            "nullable": true
          },
          "deputyEmployeeKey": {
            "type": "string",
            "nullable": true
          },
          "startsOn": {
            "type": "string",
            "format": "date-time"
          },
          "endsOn": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "changedByEmployeeKey": {
            "type": "string",
            "nullable": true
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Account": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "activatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSigninAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deactivatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deactivationReason": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Contact": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "extensionNumber": {
            "type": "string",
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaxCode": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "recoveryIndicator": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ValueTypeCode": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "PerDiemParameter": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "valueType": {
            "$ref": "#/components/schemas/ValueTypeCode"
          },
          "perDiemParameterCompanyJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemParameterCompanyJunction"
            },
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PerDiemParameterCompanyJunction": {
        "type": "object",
        "properties": {
          "perDiemParameterId": {
            "type": "integer",
            "format": "int32"
          },
          "perDiemParameter": {
            "$ref": "#/components/schemas/PerDiemParameter"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "alternateKey": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LegalEntity": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "orgForm": {
            "type": "string",
            "nullable": true
          },
          "occupations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            },
            "nullable": true,
            "readOnly": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Country": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          },
          "codeAlpha3": {
            "type": "string",
            "nullable": true
          },
          "visible": {
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "cities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/City"
            },
            "nullable": true,
            "readOnly": true
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "City": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "iata": {
            "type": "string",
            "nullable": true
          },
          "codeAlpha2": {
            "type": "string",
            "nullable": true
          },
          "indexA": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "visible": {
            "type": "boolean"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "occupations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            },
            "nullable": true,
            "readOnly": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrgUnit": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "parentOrgUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentOrgUnit": {
            "$ref": "#/components/schemas/OrgUnit"
          },
          "managerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "manager": {
            "$ref": "#/components/schemas/Employee"
          },
          "managerOccupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "managerOccupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "occupations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            },
            "nullable": true,
            "readOnly": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Company": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isHolding": {
            "type": "boolean"
          },
          "holdingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "holding": {
            "$ref": "#/components/schemas/Company"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "accountingCode": {
            "type": "string",
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "taxCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxCode"
            },
            "nullable": true,
            "readOnly": true
          },
          "perDiemParameterCompanyJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemParameterCompanyJunction"
            },
            "nullable": true,
            "readOnly": true
          },
          "legalEntities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalEntity"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "departments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgUnit"
            },
            "nullable": true
          },
          "occupations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            },
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AccountableSettlement": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assigneeEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "assigneeEmployee": {
            "$ref": "#/components/schemas/Employee"
          },
          "expenseApplicationNumber": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetItemLevel": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ApprovalTierComposition": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ApprovalTier": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "approvalSheetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalSheet": {
            "$ref": "#/components/schemas/ApprovalSheet"
          },
          "tierCode": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "description": {
            "$ref": "#/components/schemas/Name"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "composition": {
            "$ref": "#/components/schemas/ApprovalTierComposition"
          },
          "approvalSheetItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetItem"
            },
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetObject": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "objectId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "approvalSheetId": {
            "type": "integer",
            "format": "int32"
          },
          "approvalSheet": {
            "$ref": "#/components/schemas/ApprovalSheet"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetItemImprove": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "approvalSheetId": {
            "type": "integer",
            "format": "int32"
          },
          "approvalSheet": {
            "$ref": "#/components/schemas/ApprovalSheet"
          },
          "approvalSheetItemId": {
            "type": "integer",
            "format": "int32"
          },
          "approvalSheetItem": {
            "$ref": "#/components/schemas/ApprovalSheetItem"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "commentToImprove": {
            "type": "string",
            "nullable": true
          },
          "commentImproved": {
            "type": "string",
            "nullable": true
          },
          "improvedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheet": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAtPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAtFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolution": {
            "$ref": "#/components/schemas/ApprovalResolution"
          },
          "state": {
            "$ref": "#/components/schemas/ApprovalSheetState"
          },
          "canceledByAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canceledByAccount": {
            "$ref": "#/components/schemas/Account"
          },
          "currentLevel": {
            "$ref": "#/components/schemas/ApprovalSheetItemLevel"
          },
          "approvalSheetItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetItem"
            },
            "nullable": true,
            "deprecated": true
          },
          "approvalTiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalTier"
            },
            "nullable": true
          },
          "currentTier": {
            "$ref": "#/components/schemas/ApprovalTier"
          },
          "currentTierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalSheetObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetObject"
            },
            "nullable": true
          },
          "approvalSheetItemImproves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetItemImprove"
            },
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApprovalSheetItem": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "approvalSheetId": {
            "type": "integer",
            "format": "int32"
          },
          "approvalSheet": {
            "$ref": "#/components/schemas/ApprovalSheet"
          },
          "assigneeId": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          },
          "assignee": {
            "$ref": "#/components/schemas/Employee"
          },
          "approvedById": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedBy": {
            "$ref": "#/components/schemas/Employee"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAtPlan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAtFact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolution": {
            "$ref": "#/components/schemas/ApprovalResolution"
          },
          "level": {
            "$ref": "#/components/schemas/ApprovalSheetItemLevel"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "occupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "occupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "approvalTierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalTier": {
            "$ref": "#/components/schemas/ApprovalTier"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeViewOption": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "paramName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Language": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employee"
            },
            "nullable": true,
            "readOnly": true
          },
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Employee": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "$ref": "#/components/schemas/FullName"
          },
          "photoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "birthDay": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "nullable": true
          },
          "accountableSettlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountableSettlement"
            },
            "nullable": true,
            "readOnly": true
          },
          "assignedToMeApprovalSheetItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "approvedByMeApprovalSheetItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "employeeViewOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeViewOption"
            },
            "nullable": true
          },
          "languageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "isActive": {
            "type": "boolean"
          },
          "occupations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            },
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeSnapshot": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "$ref": "#/components/schemas/FullName"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "externalEmployeeId": {
            "type": "integer",
            "format": "int32"
          },
          "birthDay": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "occupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "occupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "occupationNameRu": {
            "type": "string",
            "nullable": true
          },
          "occupationNameEn": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "legalEntityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "legalEntity": {
            "$ref": "#/components/schemas/LegalEntity"
          },
          "orgUnitId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orgUnit": {
            "$ref": "#/components/schemas/OrgUnit"
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "startedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "rolePermissionJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermissionJunction"
            },
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RolePermissionJunction": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permission": {
            "$ref": "#/components/schemas/Permission"
          }
        },
        "additionalProperties": false
      },
      "SettingType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Setting": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "type": {
            "$ref": "#/components/schemas/SettingType"
          },
          "settingValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingValue"
            },
            "nullable": true,
            "readOnly": true
          },
          "action": {
            "type": "boolean"
          },
          "objectTypeId": {
            "$ref": "#/components/schemas/ExpenseObjectType"
          },
          "settingCode": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SettingValueList": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "settingValId": {
            "type": "integer",
            "format": "int32"
          },
          "settingVal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "valueBool": {
            "type": "boolean",
            "nullable": true
          },
          "valueInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "valueString": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SettingValue": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "settingId": {
            "type": "integer",
            "format": "int32"
          },
          "setting": {
            "$ref": "#/components/schemas/Setting"
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "valueBool": {
            "type": "boolean",
            "nullable": true
          },
          "valueInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "valueString": {
            "type": "string",
            "nullable": true
          },
          "settingValuesCollection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingValueList"
            },
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PermissionObjectStateJunction": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permission": {
            "$ref": "#/components/schemas/AccessPermission"
          },
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PermissionObjectFieldJunction": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permission": {
            "$ref": "#/components/schemas/AccessPermission"
          },
          "dataAttribute": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdditionalObjectFieldJunction": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permission": {
            "$ref": "#/components/schemas/AccessPermission"
          },
          "objectTypeId": {
            "type": "string",
            "nullable": true
          },
          "objectField": {
            "type": "string",
            "nullable": true
          },
          "objectValue": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PermissionCustomPropertyJunction": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "integer",
            "format": "int32"
          },
          "permission": {
            "$ref": "#/components/schemas/AccessPermission"
          },
          "objectTypeId": {
            "type": "string",
            "nullable": true
          },
          "customPropertyCode": {
            "type": "string",
            "nullable": true
          },
          "customPropertyValue": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AccessPermission": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "permCreate": {
            "type": "boolean"
          },
          "permRead": {
            "type": "boolean"
          },
          "permUpdate": {
            "type": "boolean"
          },
          "permDelete": {
            "type": "boolean"
          },
          "objectLogicalName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "objectStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionObjectStateJunction"
            },
            "nullable": true
          },
          "objectFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionObjectFieldJunction"
            },
            "nullable": true
          },
          "additionalObjectFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalObjectFieldJunction"
            },
            "nullable": true
          },
          "customProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionCustomPropertyJunction"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "rolePermissionJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermissionJunction"
            },
            "nullable": true,
            "readOnly": true
          },
          "accountRoleJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupationRoleJunction"
            },
            "nullable": true,
            "readOnly": true
          },
          "settingValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingValue"
            },
            "nullable": true,
            "readOnly": true
          },
          "accessPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermission"
            },
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OccupationRoleJunction": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "occupationId": {
            "type": "integer",
            "format": "int32"
          },
          "occupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "additionalProperties": false
      },
      "OccupationCustomPropertyPermissionJunction": {
        "type": "object",
        "properties": {
          "occupationId": {
            "type": "integer",
            "format": "int32"
          },
          "occupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "objectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customPropertyCode": {
            "type": "string",
            "nullable": true
          },
          "customPropertyListValueID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Occupation": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "employee": {
            "$ref": "#/components/schemas/Employee"
          },
          "legalEntityId": {
            "type": "integer",
            "format": "int32"
          },
          "legalEntity": {
            "$ref": "#/components/schemas/LegalEntity"
          },
          "orgUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/OrgUnit"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "managerOccupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "managerOccupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isHierarchicPermission": {
            "type": "boolean"
          },
          "isExternal": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "employeeSnapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeSnapshot"
            },
            "nullable": true,
            "readOnly": true
          },
          "occupationRoleJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupationRoleJunction"
            },
            "nullable": true
          },
          "approvalSheetItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovalSheetItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "occupationCustomPropertyPermissionJunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupationCustomPropertyPermissionJunction"
            },
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeDeputy": {
        "type": "object",
        "properties": {
          "logicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "employeeOccupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeOccupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "deputyOccupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deputyOccupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "lifetime": {
            "$ref": "#/components/schemas/Lifetime"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeBaseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[EmployeeBaseResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeBaseResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeViewOptionRequest": {
        "type": "object",
        "properties": {
          "paramName": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeRequest": {
        "type": "object",
        "properties": {
          "photo": {
            "type": "boolean"
          },
          "high": {
            "type": "boolean"
          },
          "fullName": {
            "$ref": "#/components/schemas/FullName"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageRequest"
          },
          "employeeViewOptions": {
            "$ref": "#/components/schemas/EmployeeViewOptionRequest"
          }
        },
        "additionalProperties": false
      },
      "Response[EmployeeBaseResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/EmployeeBaseResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EmployeeSettingsRequest": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/LanguageRequest"
          },
          "showOnBoarding": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseApplicationStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExpenseApplicationResponse": {
        "type": "object",
        "properties": {
          "journeyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripNumber": {
            "type": "integer",
            "format": "int32"
          },
          "approvedAmount": {
            "type": "number",
            "format": "double"
          },
          "expenseApplicationTravelDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationTravelDatesResponse"
            },
            "nullable": true
          },
          "businessTripDestinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessTripDestinationResponse"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationType": {
            "$ref": "#/components/schemas/ApplicationTypeReferenceResponse"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "assigneeEmployee": {
            "$ref": "#/components/schemas/EmployeeReferenceResponseWithOccupationId"
          },
          "createdByEmployee": {
            "$ref": "#/components/schemas/EmployeeReferenceResponse"
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "company": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "departureFromCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "arrivalToCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "startOn": {
            "type": "string",
            "format": "date-time"
          },
          "endOn": {
            "type": "string",
            "format": "date-time"
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseResponse"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "businessTarget": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "advanceCashAmount": {
            "type": "number",
            "format": "double"
          },
          "lineManager": {
            "$ref": "#/components/schemas/EmployeeReferenceResponse"
          },
          "personalDaysNumber": {
            "type": "integer",
            "format": "int32"
          },
          "paperWork": {
            "$ref": "#/components/schemas/PaperWorkResponse"
          },
          "isActive": {
            "type": "boolean"
          },
          "postingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[ExpenseApplicationResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseApplicationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseApplicationRequest": {
        "type": "object",
        "properties": {
          "applicationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "businessTargetId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "businessTripOption": {
            "$ref": "#/components/schemas/BusinessTripOptionRequest"
          },
          "assigneeEmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          },
          "occupationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[ExpenseApplicationResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ExpenseApplicationResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseApplicationAdvanceCashAmountRequest": {
        "type": "object",
        "properties": {
          "applicationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "advanceCashAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Integration.BusinessTripDestinationResponse": {
        "type": "object",
        "properties": {
          "city": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "arrivalOn": {
            "type": "string",
            "format": "date-time"
          },
          "leaveOn": {
            "type": "string",
            "format": "date-time"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Integration.BusinessTripResponse": {
        "type": "object",
        "properties": {
          "departureFromCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "arrivalToCity": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "businessTripDestination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.BusinessTripDestinationResponse"
            },
            "nullable": true
          },
          "journeyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripNumber": {
            "type": "integer",
            "format": "int32"
          },
          "startOn": {
            "type": "string",
            "nullable": true
          },
          "endOn": {
            "type": "string",
            "nullable": true
          },
          "personalDaysNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expenseApplicationTravelDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateRange"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.EmployeeSnapshotRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstNameRu": {
            "type": "string",
            "nullable": true
          },
          "firstNameEn": {
            "type": "string",
            "nullable": true
          },
          "middleNameRu": {
            "type": "string",
            "nullable": true
          },
          "middleNameEn": {
            "type": "string",
            "nullable": true
          },
          "lastNameRu": {
            "type": "string",
            "nullable": true
          },
          "lastNameEn": {
            "type": "string",
            "nullable": true
          },
          "birthDay": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.ExpenseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "expenseType": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountCurrency": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "paymentForm": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "accountableFormNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.CustomPropertyValueRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "valueRu": {
            "type": "string",
            "nullable": true
          },
          "valueEn": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.ExpenseApplicationResponse": {
        "type": "object",
        "properties": {
          "businessTrip": {
            "$ref": "#/components/schemas/Integration.BusinessTripResponse"
          },
          "company": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "applicationType": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "businessTarget": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "lineManager": {
            "$ref": "#/components/schemas/Integration.EmployeeSnapshotRequest"
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.ExpenseResponse"
            },
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "advanceCashRequired": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "advanceCashAmount": {
            "type": "number",
            "format": "double"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeData": {
            "$ref": "#/components/schemas/Integration.EmployeeSnapshotRequest"
          },
          "assigneeEmployeeData": {
            "$ref": "#/components/schemas/Integration.EmployeeSnapshotRequest"
          },
          "customPropertyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.CustomPropertyValueRequest"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Integration.BusinessTripDestinationRequest": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "arrivalOn": {
            "type": "string",
            "format": "date-time"
          },
          "leaveOn": {
            "type": "string",
            "format": "date-time"
          },
          "ordinal": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Integration.PerDiemParameterRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.PerDiemRequest": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date-time"
          },
          "isPrivateDay": {
            "type": "boolean"
          },
          "perDiemParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.PerDiemParameterRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.BusinessTripRequest": {
        "type": "object",
        "properties": {
          "departureFromCity": {
            "type": "string",
            "nullable": true
          },
          "arrivalToCity": {
            "type": "string",
            "nullable": true
          },
          "businessTripDestination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.BusinessTripDestinationRequest"
            },
            "nullable": true
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.PerDiemRequest"
            },
            "nullable": true
          },
          "journeyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripNumber": {
            "type": "integer",
            "format": "int32"
          },
          "startOn": {
            "type": "string",
            "nullable": true
          },
          "endOn": {
            "type": "string",
            "nullable": true
          },
          "personalDaysNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expenseApplicationTravelDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateRange"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.ExpenseRequest": {
        "type": "object",
        "properties": {
          "isService": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "paymentForm": {
            "type": "string",
            "nullable": true
          },
          "expenseType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "advanceRequired": {
            "type": "boolean"
          },
          "typeName": {
            "$ref": "#/components/schemas/Name"
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "accountableFormNumber": {
            "type": "string",
            "nullable": true
          },
          "exchangedAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "toDelete": {
            "type": "boolean"
          },
          "external": {
            "type": "boolean"
          },
          "isHotelPayOnSite": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.ExpenseApplicationRequest": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "nullable": true
          },
          "businessTarget": {
            "type": "string",
            "nullable": true
          },
          "businessTrip": {
            "$ref": "#/components/schemas/Integration.BusinessTripRequest"
          },
          "lineManager": {
            "type": "string",
            "nullable": true
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.ExpenseRequest"
            },
            "nullable": true,
            "readOnly": true
          },
          "entityLogicalName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "communications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.CommunicationIntegrationRequest"
            },
            "nullable": true
          },
          "orgUnitId": {
            "type": "string",
            "nullable": true
          },
          "legalEntityId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "advanceCashRequired": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "advanceCashAmount": {
            "type": "number",
            "format": "double"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "createdByEmployeeData": {
            "$ref": "#/components/schemas/Integration.EmployeeSnapshotRequest"
          },
          "assigneeEmployeeData": {
            "$ref": "#/components/schemas/Integration.EmployeeSnapshotRequest"
          },
          "customPropertyValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.CustomPropertyValueRequest"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[ExpenseResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ExpenseResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[ExpenseResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[ExpenseTypeResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseTypeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseTypeRequest": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[ExpenseTypeResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/ExpenseTypeResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApprovalStage": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "Integration.ExternalApprovalRequestIntegrationRequest": {
        "type": "object",
        "properties": {
          "approvalEmployeeAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "approvedByEmployeeAlternateKey": {
            "type": "string",
            "nullable": true
          },
          "alternateKey": {
            "type": "string",
            "nullable": true
          },
          "authorized": {
            "type": "boolean",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Integration.ExternalApprovalHistoryRequest": {
        "type": "object",
        "properties": {
          "journeyNumber": {
            "type": "integer",
            "format": "int32"
          },
          "businessTripNumber": {
            "type": "integer",
            "format": "int32"
          },
          "stage": {
            "$ref": "#/components/schemas/ApprovalStage"
          },
          "subjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.ExpenseRequest"
            },
            "nullable": true
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration.ExternalApprovalRequestIntegrationRequest"
            },
            "nullable": true
          },
          "externalSystemCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneralPermissionsResult": {
        "type": "object",
        "properties": {
          "canCreate": {
            "type": "boolean"
          },
          "canRead": {
            "type": "boolean"
          },
          "canUpdate": {
            "type": "boolean"
          },
          "canDelete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EntityAuditObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/AuditObjectType"
          }
        },
        "additionalProperties": false
      },
      "LedgerAccountResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[LedgerAccountResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LedgerAccountResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LedgerAccountRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[LedgerAccountResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/LedgerAccountResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LegalEntityResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "orgForm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[LegalEntityResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalEntityResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalApplications": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "LocationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "cityId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[LocationResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[MeetingParticipantResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeetingParticipantResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeetingParticipantCreateRequest": {
        "type": "object",
        "properties": {
          "occupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "advanceReportAdditionalDocumentId": {
            "type": "integer",
            "format": "int32"
          },
          "fio": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "occupationName": {
            "type": "string",
            "nullable": true
          },
          "isResponsibleForMeeting": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationChannelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "channelName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationTypeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDataBaseResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "object": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "channel": {
            "$ref": "#/components/schemas/NotificationChannelResponse"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationTypeResponse"
          },
          "template": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "expired": {
            "type": "string",
            "format": "date-time"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationDataBaseResponse"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[NotificationResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDataBaseRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "applicationTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationReceiverRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "login": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationInitiateRequest": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "integer",
            "format": "int32"
          },
          "event": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationDataBaseRequest"
          },
          "expired": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "typeNotification": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "receivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationReceiverRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationUpdateRequest": {
        "type": "object",
        "properties": {
          "read": {
            "type": "boolean"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CostCenterShortResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "OccupationShortResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "costCenter": {
            "$ref": "#/components/schemas/CostCenterShortResponse"
          }
        },
        "additionalProperties": false
      },
      "ManagerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "CostCenterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OrgUnitShortResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OccupationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "legalEntity": {
            "$ref": "#/components/schemas/LegalEntityResponse"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeNameResponse"
          },
          "manager": {
            "$ref": "#/components/schemas/ManagerResponse"
          },
          "costCenter": {
            "$ref": "#/components/schemas/CostCenterResponse"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/OrgUnitShortResponse"
          },
          "location": {
            "$ref": "#/components/schemas/LocationResponse"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[OccupationResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupationResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OccupationRequest": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "managerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "orgUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "legalEntityId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "vendor": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[OccupationResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/OccupationResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[OrgUnitShortResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgUnitShortResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaperWorkRequest": {
        "type": "object",
        "properties": {
          "objectType": {
            "type": "string",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentFormMapResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentFormId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[PaymentFormMapResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentFormMapResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentFormMapRequest": {
        "type": "object",
        "properties": {
          "applicationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentFormId": {
            "type": "integer",
            "format": "int32"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response[PaymentFormMapResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/PaymentFormMapResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PaymentFormResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[PaymentFormResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentFormResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentFormRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "Response[PaymentFormResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/PaymentFormResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemPreviewParameter": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemPreviewDayParams": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date-time"
          },
          "perDiemParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemPreviewParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemPreviewCalculationRequest": {
        "type": "object",
        "properties": {
          "calculationParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemPreviewDayParams"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemPreviewDayMoney": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "currencyRate": {
            "type": "number",
            "format": "double"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PerDiemPreviewCalculationResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemPreviewDayMoney"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyCodeReponse": {
        "type": "object",
        "properties": {
          "numCode": {
            "type": "integer",
            "format": "int32"
          },
          "alphaCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemCalculationItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "amountCurrency": {
            "type": "number",
            "format": "double"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyCodeReponse"
          },
          "day": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PerDiemParameterValueResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "parameterName": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalculationWithParamValuesResponse": {
        "type": "object",
        "properties": {
          "calculation": {
            "$ref": "#/components/schemas/PerDiemCalculationItemResponse"
          },
          "paramValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemParameterValueResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemCalculationDetailResponse": {
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "calculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculationWithParamValuesResponse"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Response[PerDiemCalculationDetailResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/PerDiemCalculationDetailResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemParameterValueRequest": {
        "type": "object",
        "properties": {
          "parameterId": {
            "type": "integer",
            "format": "int32"
          },
          "parameterValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalculationRequest": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date-time"
          },
          "amountCurrencyId": {
            "type": "integer",
            "format": "int32"
          },
          "amountCurrency": {
            "type": "number",
            "format": "double"
          },
          "currencyRate": {
            "type": "number",
            "format": "double"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "valuesParamByDay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerDiemParameterValueRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemCalculationRequest": {
        "type": "object",
        "properties": {
          "applicationRef": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "calculations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculationRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerDiemParameterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[PermissionResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Response[PermissionResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/PermissionResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[RoleResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[RoleResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/RoleResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SettingValueListResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "valueInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "valueBool": {
            "type": "boolean",
            "nullable": true
          },
          "valueString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SettingResponse": {
        "type": "object",
        "properties": {
          "settingId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "settingCode": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "boolean"
          },
          "objectTypeId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "settingValueId": {
            "type": "integer",
            "format": "int32"
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "valueBool": {
            "type": "boolean",
            "nullable": true
          },
          "valueInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "valueString": {
            "type": "string",
            "nullable": true
          },
          "valueListResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingValueListResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[SettingResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdvanceReportApplicationTrigger": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "AdvanceReportApplicationTransitionRequest": {
        "type": "object",
        "properties": {
          "sheetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "trigger": {
            "$ref": "#/components/schemas/AdvanceReportApplicationTrigger"
          }
        },
        "additionalProperties": false
      },
      "TaxCodeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "companyId": {
            "type": "integer",
            "format": "int32"
          },
          "recoveryIndicator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[TaxCodeResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxCodeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxCodeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          }
        },
        "additionalProperties": false
      },
      "Response[TaxCodeResponse]": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/TaxCodeResponse"
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TransactionAction": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransactionUpdateRequest": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/TransactionAction"
          },
          "ledgerOrVendor": {
            "type": "string",
            "nullable": true
          },
          "taxCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "occupationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmployeeTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "$ref": "#/components/schemas/CompanyResponse"
          },
          "occupationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameRu": {
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "costCenter": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "employee": {
            "$ref": "#/components/schemas/EmployeeTransactionResponse"
          },
          "businessTarget": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "txText": {
            "type": "string",
            "nullable": true
          },
          "ledgerOrVendor": {
            "type": "string",
            "nullable": true
          },
          "postingKey": {
            "type": "integer",
            "format": "int32"
          },
          "amountRub": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "docNumber": {
            "type": "string",
            "nullable": true
          },
          "docDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyResponse"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "curRate": {
            "type": "number",
            "format": "double"
          },
          "taxCode": {
            "$ref": "#/components/schemas/TaxCodeResponse"
          },
          "postingDate": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "expenseItem": {
            "$ref": "#/components/schemas/ExpenseItemResponse"
          },
          "dc": {
            "type": "string",
            "nullable": true
          },
          "docType": {
            "type": "string",
            "nullable": true
          },
          "doesCostCenterDiffer": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResponse[TransactionResponse]": {
        "type": "object",
        "properties": {
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionBaseRequest": {
        "type": "object",
        "properties": {
          "objectId": {
            "$ref": "#/components/schemas/EntityReference"
          },
          "occupationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://dev-passport.aeroclub.ru/connect/authorize",
            "scopes": {
              "expense.swagger.ui": ""
            }
          }
        }
      }
    }
  }
}